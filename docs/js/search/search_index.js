var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/FacebookAuthConfig.html",[0,0.09,1,1.914]],["body/interfaces/FacebookAuthConfig.html",[0,0.131,1,2.417,2,0.497,3,0.258,4,0.258,5,0.258,6,1.905,7,0.331,8,1.244,9,1.507,10,3.362,11,3.774,12,3.774,13,3.774,14,3.774,15,3.033,16,3.362,17,3.774,18,1.896,19,0.855,20,0.03,21,1.516,22,3.447,23,2.679,24,1.572,25,0.417,26,1.43,27,1.335,28,2.138,29,2.138,30,2.138,31,1.718,32,2.138,33,1.563,34,2.138,35,2.138,36,2.138,37,1.718,38,2.138,39,1.718,40,2.138,41,1.718,42,0.956,43,0.013,44,0.019,45,0.013]],["title/interfaces/FacebookAuthResponse.html",[0,0.09,41,1.914]],["body/interfaces/FacebookAuthResponse.html",[0,0.147,1,2.122,2,0.613,3,0.319,4,0.319,5,0.319,6,2.352,10,2.352,11,2.641,12,2.641,13,2.641,14,2.641,15,2.122,16,2.352,17,2.641,18,1.88,19,0.666,20,0.031,21,1.463,23,2.352,24,1.381,25,0.448,26,1.767,27,1.457,28,2.641,29,2.641,30,2.641,31,2.122,32,2.641,33,1.931,34,2.641,35,2.641,36,2.641,37,2.122,38,2.641,39,2.122,40,2.641,41,2.79,42,1.552,43,0.017,44,0.022,45,0.017,46,1.767,47,0.934,48,3.612]],["title/interfaces/FacebookAuthSignInOptions.html",[0,0.09,31,1.914]],["body/interfaces/FacebookAuthSignInOptions.html",[0,0.137,1,1.855,2,0.536,3,0.279,4,0.279,5,0.279,6,2.056,7,0.357,8,1.312,9,1.478,10,2.056,11,2.308,12,2.308,13,2.308,14,2.308,15,1.855,16,2.056,17,2.308,18,1.919,19,0.83,20,0.03,21,1.492,23,2.056,24,1.207,25,0.428,26,1.544,27,1.38,28,2.308,29,2.308,30,2.308,31,2.548,32,3.9,33,2.852,34,3.9,35,3.9,36,3.9,37,1.855,38,2.308,39,1.855,40,2.308,41,1.855,42,1.032,43,0.014,44,0.02,45,0.014]],["title/injectables/FacebookAuthStrategyService.html",[49,1.245,50,2.382]],["body/injectables/FacebookAuthStrategyService.html",[3,0.132,4,0.132,5,0.132,7,0.169,9,0.866,15,1.443,18,0.743,19,0.562,20,0.031,21,0.586,22,1.251,23,0.972,24,0.571,25,0.114,26,0.73,27,0.386,43,0.007,44,0.011,45,0.007,47,1.037,49,0.939,50,1.795,51,0.798,52,3.613,53,1.021,54,1.091,55,0.527,56,2.288,57,1.104,58,2.808,59,2.058,60,0.798,61,1.201,62,1.313,63,1.6,64,1.938,65,1.6,66,0.798,67,1.091,68,2.533,69,1.774,70,2.968,71,1.251,72,1.502,73,1.502,74,1.6,75,1.091,76,2.432,77,1.443,78,1.63,79,2.893,80,1.6,81,1.015,82,1.251,83,1.251,84,1.6,85,1.493,86,1.269,87,0.877,88,0.798,89,1.251,90,1.091,91,1.201,92,0.687,93,0.877,94,0.356,95,0.488,96,1.795,97,2.288,98,0.877,99,0.798,100,0.972,101,1.091,102,1.091,103,1.774,104,1.091,105,2.651,106,0.972,107,1.091,108,0.972,109,0.73,110,0.73,111,1.531,112,0.972,113,0.798,114,0.972,115,0.73,116,0.73,117,0.73,118,0.798,119,0.73,120,0.73,121,0.73,122,0.972,123,0.972,124,0.972,125,0.972,126,0.571,127,1.091,128,2.288,129,1.196,130,2.651,131,2.456,132,1.104,133,0.73,134,3.276,135,1.493,136,1.313,137,1.31,138,1.493,139,1.493,140,1.493,141,1.493,142,1.493,143,3.05,144,2.456,145,1.493,146,1.493,147,1.091,148,2.456,149,1.493,150,0.972,151,1.493,152,1.493,153,1.091,154,0.798,155,1.795,156,2.288,157,1.795,158,1.795,159,1.795,160,1.493,161,3.13,162,1.493,163,2.456,164,2.058,165,2.038,166,1.493,167,1.493,168,1.493,169,1.313,170,1.091,171,1.251,172,1.091,173,1.493,174,1.673,175,2.456,176,1.493,177,1.493,178,1.493,179,1.493,180,1.251,181,1.493,182,1.251,183,0.798,184,1.493,185,2.058,186,2.456,187,1.795,188,1.313,189,1.493,190,1.493,191,1.251,192,2.456,193,1.493,194,2.456,195,3.13,196,1.493,197,3.13,198,1.493,199,1.493,200,1.493,201,1.795,202,1.493,203,1.251,204,1.493,205,1.493,206,3.627,207,1.493,208,1.493,209,1.493,210,0.972,211,1.493,212,1.493,213,1.493,214,1.493,215,1.493,216,1.493,217,1.493,218,1.493,219,0.972,220,1.493,221,1.091,222,1.493,223,1.091,224,1.091,225,1.493,226,1.493,227,1.493,228,1.493,229,1.493,230,1.493,231,1.493]],["title/interfaces/GoogleAuthConfig.html",[0,0.09,232,1.741]],["body/interfaces/GoogleAuthConfig.html",[0,0.135,2,0.521,3,0.271,4,0.271,5,0.271,7,0.347,8,1.286,9,1.497,18,1.999,19,0.853,20,0.03,21,1.015,25,0.424,27,1.262,33,2.958,42,1.002,43,0.014,44,0.019,45,0.014,232,2.272,233,1.997,234,3.432,235,3.852,236,3.852,237,3.852,238,3.605,239,4.046,240,3.096,241,2.242,242,1.802,243,2.242,244,2.769,245,1.997,246,1.802,247,1.802,248,2.242,249,1.802]],["title/interfaces/GoogleAuthResponse.html",[0,0.09,249,1.914]],["body/interfaces/GoogleAuthResponse.html",[0,0.148,2,0.626,3,0.326,4,0.326,5,0.326,18,1.963,19,0.675,20,0.03,21,1.149,25,0.451,27,1.386,33,2.572,42,1.573,43,0.017,44,0.022,45,0.017,46,1.803,47,0.953,232,1.97,233,2.401,234,2.401,235,2.695,236,2.695,237,2.695,238,3.134,239,3.518,240,3.337,241,2.695,242,2.166,243,2.695,244,3.134,245,2.401,246,2.166,247,2.166,248,2.695,249,2.828,250,3.687]],["title/interfaces/GoogleAuthSignInOptions.html",[0,0.09,242,1.914]],["body/interfaces/GoogleAuthSignInOptions.html",[0,0.138,2,0.546,3,0.284,4,0.284,5,0.284,7,0.364,8,1.328,9,1.483,18,1.981,19,0.834,20,0.03,21,1.283,25,0.431,27,1.293,33,3.008,42,1.05,43,0.015,44,0.02,45,0.015,232,1.717,233,2.093,234,2.093,235,2.349,236,2.349,237,2.349,238,3.665,239,4.114,240,3.158,241,2.349,242,2.58,243,3.929,244,2.859,245,3.501,246,1.888,247,1.888,248,2.349,249,1.888]],["title/injectables/GoogleAuthStrategyService.html",[49,1.245,251,2.382]],["body/injectables/GoogleAuthStrategyService.html",[3,0.133,4,0.133,5,0.133,7,0.171,9,0.872,19,0.512,20,0.031,21,0.872,25,0.116,26,1.542,27,0.816,43,0.007,44,0.011,45,0.007,47,1.121,49,0.947,51,0.807,53,1.051,54,1.103,55,0.533,56,2.306,57,1.114,60,0.807,61,1.212,62,1.325,63,1.614,64,1.952,65,1.614,66,0.807,67,1.103,68,2.547,69,0.738,70,2.983,72,1.512,73,1.512,74,1.614,75,1.103,76,2.149,77,1.456,78,1.948,79,2.948,80,1.614,81,1.022,82,1.265,84,1.614,86,1.296,87,0.887,88,0.807,90,1.103,91,1.212,92,0.693,93,0.887,94,0.36,95,0.493,96,1.812,97,2.306,98,0.887,99,0.807,100,0.983,101,1.103,102,1.103,103,1.542,104,1.103,105,1.103,106,0.983,107,1.103,108,0.983,109,0.738,110,0.738,111,1.212,112,0.983,113,0.807,114,0.983,115,0.738,116,0.738,117,0.738,118,0.807,119,0.738,120,0.738,121,0.738,122,0.983,123,0.983,124,0.983,125,0.983,126,0.577,127,1.103,128,1.103,129,0.947,130,1.812,133,0.738,134,3.285,136,1.325,137,1.318,143,3.088,147,1.103,150,0.983,153,1.103,155,2.306,156,2.306,157,2.306,158,2.306,159,2.306,165,0.983,169,1.325,174,1.686,180,1.265,187,1.812,188,1.325,191,1.265,203,1.265,210,0.983,219,0.983,221,1.103,223,1.103,224,1.103,232,1.686,240,1.456,245,2.054,251,1.812,252,3.837,253,2.823,254,3.651,255,1.509,256,1.509,257,1.509,258,1.509,259,2.479,260,1.265,261,1.265,262,1.265,263,1.265,264,2.479,265,2.479,266,1.265,267,1.509,268,1.509,269,1.509,270,1.509,271,1.509,272,1.509,273,1.509,274,4.033,275,1.509,276,0.807,277,1.509,278,1.509,279,1.265,280,3.154,281,2.479,282,1.509,283,2.479,284,2.479,285,1.509,286,1.509,287,1.509,288,1.509,289,1.509,290,1.265,291,1.265,292,1.509,293,1.509,294,1.509,295,1.509,296,1.509,297,1.509,298,1.265,299,1.509,300,1.265,301,1.265,302,1.265,303,1.509,304,1.509,305,1.509,306,1.265,307,1.509,308,1.509,309,1.509,310,1.509,311,1.509,312,1.509,313,1.509,314,1.509,315,1.265,316,1.103,317,1.265,318,1.509,319,1.509,320,1.509,321,1.509,322,1.509,323,1.509,324,1.509,325,1.509,326,1.509,327,1.509,328,1.509,329,1.509]],["title/interfaces/MicrosoftAutSignOutOptions.html",[0,0.09,330,1.593]],["body/interfaces/MicrosoftAutSignOutOptions.html",[0,0.159,2,0.586,3,0.305,4,0.305,5,0.305,18,1.794,19,0.484,20,0.031,21,0.824,24,1.319,25,0.442,27,1.534,42,1.939,43,0.016,44,0.021,45,0.016,46,1.687,47,0.892,57,2.591,129,1.319,132,1.55,133,1.687,330,2.253,331,2.027,332,3.45,333,1.687,334,2.707,335,2.027,336,2.027,337,1.687,338,2.027,339,3.388,340,3.082,341,3.388,342,2.027,343,2.027,344,1.687,345,2.027,346,2.027,347,1.687,348,2.027,349,1.55]],["title/interfaces/MicrosoftAuthConfig.html",[0,0.09,333,1.593]],["body/interfaces/MicrosoftAuthConfig.html",[0,0.159,2,0.586,3,0.305,4,0.305,5,0.305,18,1.794,19,0.484,20,0.031,21,0.824,24,1.319,25,0.442,27,1.534,42,1.939,43,0.016,44,0.021,45,0.016,46,1.687,47,0.892,57,2.591,129,1.319,132,1.55,133,1.687,330,1.687,331,2.027,333,2.253,334,2.707,335,2.027,336,2.027,337,1.687,338,2.027,339,3.388,340,3.082,341,3.388,342,2.027,343,2.027,344,1.687,345,2.027,346,2.027,347,1.687,348,2.027,349,1.55,350,3.45]],["title/interfaces/MicrosoftAuthResponse.html",[0,0.09,349,1.464]],["body/interfaces/MicrosoftAuthResponse.html",[0,0.159,2,0.586,3,0.305,4,0.305,5,0.305,18,1.794,19,0.484,20,0.031,21,0.824,24,1.319,25,0.442,27,1.534,42,1.939,43,0.016,44,0.021,45,0.016,46,1.687,47,0.892,57,2.591,129,1.319,132,1.55,133,1.687,330,1.687,331,2.027,333,1.687,334,2.707,335,2.027,336,2.027,337,1.687,338,2.027,339,3.388,340,3.082,341,3.388,342,2.027,343,2.027,344,1.687,345,2.027,346,2.027,347,1.687,348,2.027,349,2.07,351,3.45]],["title/interfaces/MicrosoftAuthSignInOptions.html",[0,0.09,344,1.593]],["body/interfaces/MicrosoftAuthSignInOptions.html",[0,0.155,2,0.546,3,0.284,4,0.284,5,0.284,7,0.364,8,1.328,9,1.048,18,1.757,19,0.702,20,0.03,21,1.194,24,1.678,25,0.431,27,1.502,42,1.899,43,0.015,44,0.02,45,0.015,46,1.571,47,0.831,55,1.135,57,2.529,129,1.678,132,1.973,133,2.147,330,1.571,331,1.888,333,1.571,334,3.413,335,2.58,336,2.58,337,2.147,338,2.58,339,3.306,340,3.008,341,3.306,342,1.888,343,1.888,344,2.147,345,1.888,346,1.888,347,1.571,348,1.888,349,1.444,352,3.213]],["title/interfaces/MicrosoftAuthStateOptions.html",[0,0.09,347,1.593]],["body/interfaces/MicrosoftAuthStateOptions.html",[0,0.159,2,0.586,3,0.305,4,0.305,5,0.305,18,1.794,19,0.484,20,0.031,21,0.824,24,1.319,25,0.442,27,1.534,42,1.939,43,0.016,44,0.021,45,0.016,46,1.687,47,0.892,57,2.591,129,1.319,132,1.55,133,1.687,330,1.687,331,2.027,333,1.687,334,2.707,335,2.027,336,2.027,337,1.687,338,2.027,339,3.388,340,3.082,341,3.388,342,2.027,343,2.027,344,1.687,345,2.027,346,2.027,347,2.253,348,2.027,349,1.55,353,3.45]],["title/injectables/MicrosoftAuthStrategyService.html",[49,1.245,354,2.382]],["body/injectables/MicrosoftAuthStrategyService.html",[3,0.133,4,0.133,5,0.133,7,0.17,9,0.961,19,0.511,20,0.031,21,0.59,25,0.115,26,0.736,27,0.389,43,0.007,44,0.011,45,0.007,47,1.041,49,0.945,51,0.804,53,1.008,54,1.1,55,0.532,56,2.301,57,1.111,60,0.804,61,1.209,62,1.322,63,1.611,64,1.322,65,1.611,66,0.804,67,1.1,68,2.543,69,0.736,70,2.979,71,1.261,72,1.667,73,1.667,74,1.611,75,1.1,76,2.438,77,1.849,78,1.638,79,2.848,80,1.611,81,1.02,83,1.261,84,1.611,86,1.334,87,0.884,88,0.804,90,1.1,91,1.209,92,0.692,93,0.884,94,0.359,95,0.492,96,1.808,97,1.1,98,0.884,99,0.804,100,0.98,101,1.1,102,1.808,103,1.969,104,1.1,105,1.808,106,0.98,107,1.1,108,0.98,109,0.736,110,0.736,111,0.736,112,0.98,113,0.804,114,0.98,115,0.736,116,1.209,117,0.736,118,0.804,119,0.736,120,0.736,121,0.736,122,0.98,123,0.98,124,0.98,125,0.98,126,0.575,127,1.1,128,1.1,129,0.945,130,3.344,134,3.067,136,1.948,137,1.192,143,3.023,147,1.1,150,0.98,153,1.1,155,1.808,156,1.808,157,1.808,158,1.808,159,1.808,164,2.072,165,1.611,174,1.948,185,1.261,188,0.804,210,0.98,219,0.98,221,1.1,223,1.1,224,1.1,261,1.261,262,1.261,263,1.261,266,1.261,298,1.261,300,1.261,301,1.261,302,1.261,306,1.261,315,1.261,316,1.1,317,1.261,337,0.736,349,0.676,354,1.808,355,3.627,356,2.622,357,2.637,358,1.505,359,2.072,360,1.505,361,2.473,362,1.261,363,0.884,364,0.884,365,1.505,366,1.505,367,4.027,368,2.473,369,1.505,370,1.505,371,1.505,372,0.804,373,1.505,374,3.148,375,3.148,376,1.505,377,1.505,378,1.505,379,1.505,380,1.505,381,1.505,382,1.505,383,1.505,384,1.505,385,1.505,386,1.505,387,1.505,388,1.505,389,2.944,390,1.505,391,1.505,392,1.505,393,3.645,394,1.505,395,1.505,396,1.505,397,1.505,398,1.505,399,1.505,400,1.505,401,1.505,402,1.505,403,1.505,404,1.505,405,1.505,406,1.505,407,1.505,408,1.505,409,1.261,410,1.261,411,1.1,412,0.98,413,1.505,414,1.505,415,1.505,416,1.505,417,1.505,418,1.505,419,1.505,420,1.505,421,1.505,422,1.505,423,2.473,424,1.505,425,1.505,426,1.505,427,1.505,428,1.505,429,1.505,430,1.505,431,1.505]],["title/modules/NgxSocialAuthModule.html",[432,1.914,433,1.914]],["body/modules/NgxSocialAuthModule.html",[3,0.299,4,0.299,5,0.299,9,1.086,19,0.475,20,0.03,25,0.259,43,0.015,44,0.021,45,0.015,47,0.875,53,0.845,55,1.196,61,1.655,69,2.224,72,1.401,73,1.401,78,1.521,86,1.311,88,1.809,92,1.437,100,2.204,119,1.655,120,1.655,121,1.655,126,1.294,143,1.809,169,2.431,171,2.836,172,2.475,174,2.431,187,2.475,188,1.809,432,1.989,433,3.366,434,2.475,435,2.962,436,3.385,437,3.325,438,3.325,439,3.325,440,4.548,441,2.802,442,4.548,443,3.385,444,4.548,445,4.015,446,3.385,447,5.137,448,4.304,449,4.548,450,2.836,451,3.385,452,4.548,453,3.385,454,2.836,455,3.385,456,3.385,457,3.385]],["title/interfaces/NgxSocialAuthModuleConfig.html",[0,0.09,445,2.382]],["body/interfaces/NgxSocialAuthModuleConfig.html",[0,0.119,2,0.731,3,0.38,4,0.38,5,0.38,7,0.488,8,1.607,9,1.268,19,0.604,20,0.029,25,0.33,43,0.02,44,0.024,45,0.02,53,0.986,55,1.522,86,1.028,94,1.028,114,2.804,357,4.45,432,2.53,433,3.121,435,2.804,441,2.941,445,3.883,458,4.306,459,4.396,460,3.148]],["title/classes/NgxSocialAuthProvider.html",[126,1.245,459,2.382]],["body/classes/NgxSocialAuthProvider.html",[3,0.311,4,0.311,5,0.311,7,0.398,8,1.411,9,0.84,19,0.837,20,0.029,25,0.269,43,0.016,44,0.021,45,0.016,47,1.354,53,1.148,55,1.243,60,1.88,66,1.88,69,2.917,72,1.456,73,1.456,81,0.984,86,1.114,92,1.306,94,1.25,95,1.15,103,1.72,113,1.88,119,1.72,120,1.72,121,1.72,126,2.002,137,1.95,183,2.494,409,3.91,437,3.411,459,3.411,461,3.518,462,4.673,463,3.518,464,5.804,465,3.518,466,4.077,467,3.518,468,3.518,469,3.518,470,3.518,471,3.518]],["title/interfaces/NgxSocialAuthResponse.html",[0,0.09,109,1.593]],["body/interfaces/NgxSocialAuthResponse.html",[0,0.116,2,0.714,3,0.371,4,0.371,5,0.371,7,0.476,8,1.583,20,0.029,25,0.322,43,0.019,44,0.024,45,0.019,53,1.139,55,1.486,81,1.177,86,1.25,92,1.464,94,1.004,95,1.375,103,2.057,109,2.56,110,2.057,111,2.787,165,3.884,290,4.385,472,3.523,473,4.205,474,5.234,475,4.385,476,3.074,477,4.205]],["title/injectables/NgxSocialAuthService.html",[49,1.245,478,2.382]],["body/injectables/NgxSocialAuthService.html",[3,0.16,4,0.16,5,0.16,7,0.205,9,0.969,19,0.818,20,0.03,25,0.138,43,0.008,44,0.013,45,0.008,47,1.144,49,1.097,51,0.967,53,1.023,55,1.434,60,0.967,61,1.403,62,1.533,64,1.533,66,0.967,72,2.043,73,1.68,76,2.744,77,2.095,78,1.988,79,2.736,81,0.803,86,1.258,87,1.063,88,0.967,91,2.303,92,0.506,93,3.007,94,1.418,95,0.591,98,1.063,99,0.967,103,1.744,109,0.885,110,0.885,111,2.164,115,0.885,116,1.403,117,0.885,118,0.967,119,0.885,120,0.885,121,0.885,126,0.691,132,1.289,134,2.095,136,1.533,137,0.591,143,2.365,169,2.516,170,2.097,174,1.906,182,3.945,183,2.887,279,1.515,291,3.4,363,1.063,364,2.095,389,2.097,411,2.966,412,3.066,435,2.881,437,2.097,438,2.097,439,2.097,441,1.403,460,1.322,466,4.16,478,2.097,479,1.809,480,2.404,481,2.404,482,2.404,483,1.809,484,1.809,485,2.869,486,2.869,487,1.809,488,2.404,489,5.401,490,2.869,491,1.809,492,3.4,493,2.869,494,1.809,495,2.404,496,1.515,497,2.869,498,1.809,499,3.565,500,1.515,501,1.322,502,1.809,503,1.515,504,3.565,505,1.809,506,3.565,507,1.515,508,1.809,509,1.515,510,1.809,511,1.809,512,1.809,513,1.809,514,1.809,515,1.809,516,1.809]],["title/interfaces/SignInOptionsMap.html",[0,0.09,115,1.593]],["body/interfaces/SignInOptionsMap.html",[0,0.119,2,0.734,3,0.382,4,0.382,5,0.382,7,0.49,8,1.611,20,0.028,25,0.331,31,3.129,43,0.02,44,0.024,45,0.02,53,0.803,76,1.943,81,1.21,86,1.438,92,1.21,94,1.032,95,1.413,115,2.604,116,2.115,137,1.886,154,2.311,242,3.129,276,2.311,344,2.604,372,2.311,517,3.161,518,2.54,519,3.161,520,3.161,521,3.161]],["title/interfaces/SignOutOptionsMap.html",[0,0.09,363,1.914]],["body/interfaces/SignOutOptionsMap.html",[0,0.119,2,0.731,3,0.38,4,0.38,5,0.38,7,0.488,8,1.607,20,0.027,25,0.33,37,3.121,43,0.02,44,0.024,45,0.02,53,0.8,76,1.935,81,1.205,86,1.436,92,1.205,94,1.028,95,1.408,116,2.106,137,1.883,154,2.302,246,3.121,276,2.302,330,2.598,363,3.121,364,2.53,372,2.302,517,3.148,518,2.53,519,3.148,520,3.148,521,3.148]],["title/interfaces/SocialAuthConfigMap.html",[0,0.09,113,1.741]],["body/interfaces/SocialAuthConfigMap.html",[0,0.119,1,3.129,2,0.734,3,0.382,4,0.382,5,0.382,7,0.49,8,1.611,20,0.028,25,0.331,43,0.02,44,0.024,45,0.02,53,0.989,69,2.115,81,1.21,86,1.438,92,1.21,94,1.032,95,1.413,113,2.846,137,1.886,154,2.311,232,2.846,276,2.311,333,2.604,372,2.311,462,3.623,518,2.54,522,3.623,523,3.623,524,3.623]],["title/interfaces/SocialAuthResponseMap.html",[0,0.09,476,2.382]],["body/interfaces/SocialAuthResponseMap.html",[0,0.119,2,0.731,3,0.38,4,0.38,5,0.38,7,0.488,8,1.607,20,0.027,25,0.33,41,3.121,43,0.02,44,0.024,45,0.02,53,0.986,81,1.205,86,1.436,92,1.205,94,1.028,95,1.408,110,2.106,111,2.106,137,1.883,154,2.302,249,3.121,276,2.302,349,2.387,372,2.302,472,3.608,476,3.883,518,2.53,522,3.608,523,3.608,524,3.608]],["title/interfaces/SocialAuthStrategy.html",[0,0.09,91,1.593]],["body/interfaces/SocialAuthStrategy.html",[0,0.067,2,0.414,3,0.216,4,0.216,5,0.216,7,0.276,9,1.133,19,0.666,20,0.03,21,0.862,25,0.187,43,0.011,44,0.016,45,0.011,47,1.227,53,1.137,55,1.518,61,1.765,62,1.929,63,2.351,64,1.929,65,2.351,72,1.965,73,1.965,74,2.351,76,2.825,77,2.524,78,2.383,79,2.933,80,2.351,81,0.683,84,2.351,86,1.266,91,1.765,92,0.683,93,2.121,94,1.449,95,0.798,99,1.304,103,2.101,109,1.194,110,1.194,111,2.478,115,1.194,116,1.765,117,1.194,118,1.304,132,1.622,136,1.929,169,2.537,170,2.639,183,3.128,359,3.024,363,1.434,364,2.524,389,2.639,411,3.47,412,2.798,466,3.14,488,3.024,492,3.977,495,3.024,503,2.045,507,2.045,509,2.045,525,4.245,526,2.441,527,2.441,528,2.441,529,3.61,530,3.61,531,3.61,532,2.441,533,2.441]],["title/injectables/SocialAuthUtilService.html",[49,1.245,68,1.914]],["body/injectables/SocialAuthUtilService.html",[3,0.228,4,0.228,5,0.228,7,0.292,9,0.898,18,1.138,19,0.684,20,0.03,25,0.198,27,0.667,42,1.594,43,0.012,44,0.017,45,0.012,47,0.973,49,1.438,51,1.38,53,0.824,55,0.912,60,1.38,61,1.839,66,1.38,68,2.21,70,3.523,72,1.557,73,1.557,78,1.16,79,2.372,86,1.164,87,1.516,88,1.38,98,1.516,99,1.38,106,1.681,108,1.681,112,1.681,119,1.262,120,1.262,121,1.262,122,1.681,123,1.681,124,1.681,125,1.681,126,0.987,134,2.865,136,1.38,137,1.451,143,2.01,172,1.887,174,2.606,210,1.681,219,1.681,316,3.244,410,4.085,412,2.449,460,1.887,500,2.163,501,1.887,534,3.718,535,2.581,536,3.761,537,2.581,538,4.438,539,4.876,540,2.581,541,3.761,542,3.151,543,4.876,544,4.438,545,2.581,546,3.761,547,5.724,548,4.876,549,2.75,550,3.761,551,3.761,552,3.761,553,3.761,554,2.581,555,2.581,556,2.581,557,2.581,558,2.581,559,2.581,560,2.581,561,2.581,562,2.581,563,2.581,564,2.581,565,2.581,566,2.581,567,2.581,568,2.581,569,2.581,570,2.581,571,3.761,572,2.581,573,2.581,574,2.581,575,2.581,576,2.581,577,2.581]],["title/interfaces/StateOptionsMap.html",[0,0.09,117,1.593]],["body/interfaces/StateOptionsMap.html",[0,0.119,2,0.734,3,0.382,4,0.382,5,0.382,7,0.49,8,1.611,20,0.028,25,0.331,39,3.129,43,0.02,44,0.024,45,0.02,53,0.803,76,1.943,81,1.21,86,1.438,92,1.21,94,1.032,95,1.413,117,2.604,118,2.311,137,1.886,154,2.311,247,3.129,276,2.311,347,2.604,372,2.311,517,3.161,518,2.54,519,3.161,520,3.161,521,3.161]],["title/changelog.html",[578,2.285,579,2.285,580,2.285]],["body/changelog.html",[20,0.027,43,0.024,44,0.027,45,0.024,580,4.316]],["title/miscellaneous/enumerations.html",[581,1.226,582,3.28]],["body/miscellaneous/enumerations.html",[7,0.517,20,0.029,43,0.021,44,0.025,45,0.021,53,1.097,58,3.583,81,1.539,94,1.314,201,3.335,253,3.583,356,3.583,435,2.971,441,2.231,549,4.319,581,2.05,582,3.822,583,3.335,584,5.502]],["title/miscellaneous/functions.html",[581,1.226,585,3.28]],["body/miscellaneous/functions.html",[7,0.474,9,1.247,20,0.029,43,0.019,44,0.024,45,0.019,53,1.106,72,2.162,73,2.162,78,2.676,94,1.358,183,2.239,441,2.782,450,4.375,480,4.375,534,3.51,581,1.882,583,3.817,585,3.51,586,5.689,587,5.222,588,4.189,589,4.375,590,5.222,591,5.222,592,4.189,593,4.189]],["title/index.html",[7,0.309,578,2.285,579,2.285]],["body/index.html",[9,0.674,10,1.84,15,1.66,16,1.84,20,0.031,25,0.307,26,2.283,43,0.013,44,0.018,45,0.013,53,1.036,58,1.84,59,2.367,62,1.51,64,1.51,81,0.79,86,1.115,92,1.561,94,0.674,126,1.534,129,1.08,137,0.923,150,1.84,169,1.51,183,1.51,188,2.495,234,1.84,238,1.84,253,1.84,340,1.51,356,1.84,432,1.66,433,2.358,438,2.934,439,2.065,441,2.283,448,2.367,454,2.367,478,3.925,481,2.367,482,2.367,501,2.065,594,5.369,595,2.825,596,2.825,597,2.825,598,2.825,599,2.825,600,2.825,601,4.014,602,4.014,603,4.014,604,2.825,605,4.014,606,2.825,607,2.825,608,2.825,609,2.825,610,2.825,611,4.014,612,2.825,613,2.825,614,2.825,615,2.825,616,2.825,617,2.825,618,2.825,619,2.825,620,2.825,621,4.014,622,2.825,623,2.825,624,2.825,625,2.825,626,2.825,627,2.825,628,5.083,629,2.825,630,2.825,631,2.825,632,2.825,633,2.825,634,2.825,635,2.825,636,2.825,637,2.367,638,2.825,639,2.825,640,2.825,641,2.825,642,2.825,643,2.825,644,2.825,645,2.825,646,2.825,647,2.825,648,2.825]],["title/modules.html",[434,3.24]],["body/modules.html",[20,0.027,43,0.023,44,0.027,45,0.023,201,3.695,433,2.97,434,3.695,649,5.055,650,5.055]],["title/overview.html",[651,3.713]],["body/overview.html",[2,0.802,20,0.026,43,0.022,44,0.026,45,0.022,51,2.524,126,1.805,364,2.774,432,3.3,441,2.309,651,3.956,652,4.722,653,4.722,654,4.722,655,4.722,656,4.722,657,5.617,658,4.722,659,5.617,660,4.722,661,4.722]],["title/miscellaneous/typealiases.html",[581,1.226,662,3.915]],["body/miscellaneous/typealiases.html",[6,3.048,7,0.53,19,0.657,20,0.026,21,1.334,37,3.283,39,3.283,43,0.021,44,0.026,45,0.021,233,3.048,240,2.75,244,3.048,246,3.283,247,3.283,581,2.103,663,4.681,664,5.588,665,5.588]],["title/miscellaneous/variables.html",[581,1.226,666,3.28]],["body/miscellaneous/variables.html",[7,0.383,19,0.638,20,0.029,24,2.19,43,0.015,44,0.021,45,0.015,50,2.475,52,2.836,53,1.175,58,2.204,69,2.512,89,3.811,91,1.655,129,1.294,188,2.935,251,2.475,252,2.836,253,2.204,260,3.811,337,2.512,354,2.475,355,2.836,356,2.204,362,3.811,475,2.836,496,3.811,525,2.836,542,2.836,549,4.189,581,1.521,583,2.475,589,2.836,637,4.304,666,2.836,667,4.548,668,4.548,669,3.385,670,5.9,671,3.385,672,3.385,673,4.548,674,4.548,675,3.385,676,3.385,677,3.385,678,3.385,679,5.492,680,5.492,681,5.137,682,3.385,683,3.385,684,3.385,685,3.385]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":300,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["1",{"_index":659,"title":{},"body":{"overview.html":{}}}],["19",{"_index":661,"title":{},"body":{"overview.html":{}}}],["5",{"_index":660,"title":{},"body":{"overview.html":{}}}],["according",{"_index":635,"title":{},"body":{"index.html":{}}}],["account",{"_index":389,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["accounts",{"_index":414,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["accounts.length",{"_index":417,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["accounts[0",{"_index":418,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["add",{"_index":606,"title":{},"body":{"index.html":{}}}],["additional",{"_index":638,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":663,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":437,"title":{},"body":{"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{}}}],["already",{"_index":453,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["angular",{"_index":595,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":112,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["angular/core",{"_index":88,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["api",{"_index":147,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["apihost",{"_index":138,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["apilang",{"_index":142,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["apiname",{"_index":268,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["apiresource",{"_index":140,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["apisource",{"_index":145,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["apiurl",{"_index":266,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["app",{"_index":621,"title":{},"body":{"index.html":{}}}],["app.component.html",{"_index":623,"title":{},"body":{"index.html":{}}}],["app.component.scss",{"_index":625,"title":{},"body":{"index.html":{}}}],["appcomponent",{"_index":626,"title":{},"body":{"index.html":{}}}],["append",{"_index":543,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["appended",{"_index":552,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["appid",{"_index":10,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"index.html":{}}}],["application",{"_index":495,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["appmodule",{"_index":454,"title":{},"body":{"modules/NgxSocialAuthModule.html":{},"index.html":{}}}],["argument",{"_index":634,"title":{},"body":{"index.html":{}}}],["array",{"_index":589,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":223,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["attributes",{"_index":548,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["attributes[key",{"_index":567,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["auth",{"_index":53,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["auth.module.ts",{"_index":436,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["auth.module.ts:21",{"_index":446,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["auth.service.ts",{"_index":479,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["auth.service.ts:19",{"_index":484,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["auth.service.ts:30",{"_index":491,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["auth.service.ts:42",{"_index":494,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["auth.service.ts:55",{"_index":487,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["auth2",{"_index":269,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["auth_type",{"_index":32,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["authenticate",{"_index":438,"title":{},"body":{"modules/NgxSocialAuthModule.html":{},"injectables/NgxSocialAuthService.html":{},"index.html":{}}}],["authenticated",{"_index":170,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["authentication",{"_index":57,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["author",{"_index":119,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["authorized",{"_index":180,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{}}}],["authresponse",{"_index":175,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["available",{"_index":201,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"miscellaneous/enumerations.html":{},"modules.html":{}}}],["based",{"_index":291,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{}}}],["behaviorsubject",{"_index":96,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["behaviorsubject(false",{"_index":211,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["behaviorsubject(null",{"_index":306,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["behaviour",{"_index":127,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["body",{"_index":316,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["body').pipe",{"_index":225,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["boolean",{"_index":21,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SocialAuthStrategy.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":655,"title":{},"body":{"overview.html":{}}}],["break",{"_index":197,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["browse",{"_index":650,"title":{},"body":{"modules.html":{}}}],["browser.min.js",{"_index":366,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["browser/modules/_src_request_endsessionrequest_.html#endsessionrequest",{"_index":345,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["browser/modules/_src_request_popuprequest_.html#popuprequest",{"_index":342,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["browser/modules/_src_request_redirectrequest_.html#redirectrequest",{"_index":343,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["browser/modules/_src_request_silentrequest_.html#silentrequest",{"_index":346,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["call",{"_index":182,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{}}}],["callback",{"_index":189,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["callfunction(functiontype",{"_index":184,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["case",{"_index":195,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["catch",{"_index":301,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["catcherror",{"_index":102,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["catcherror(this.handlefacebookinstanceerror.bind(this",{"_index":214,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["catcherror(this.handlegoogleautherror.bind(this",{"_index":309,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["catcherror(this.handlemsalinstanceerror.bind(this",{"_index":398,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["changelog",{"_index":580,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["check",{"_index":529,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{}}}],["class",{"_index":126,"title":{"classes/NgxSocialAuthProvider.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{},"index.html":{},"overview.html":{}}}],["classes",{"_index":461,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["client_id",{"_index":234,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"index.html":{}}}],["clientid",{"_index":615,"title":{},"body":{"index.html":{}}}],["common/classes/_src_response_authenticationresult_.authenticationresult.html",{"_index":348,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["compatibility",{"_index":263,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["compiler",{"_index":124,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["completes",{"_index":204,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["component",{"_index":619,"title":{},"body":{"index.html":{}}}],["config",{"_index":69,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/SocialAuthConfigMap.html":{},"miscellaneous/variables.html":{}}}],["config.providers",{"_index":456,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["config.token",{"_index":90,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["config.token.ts",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config.ts",{"_index":458,"title":{},"body":{"interfaces/NgxSocialAuthModuleConfig.html":{}}}],["configuration",{"_index":357,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{}}}],["configured",{"_index":480,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"miscellaneous/functions.html":{}}}],["connected",{"_index":178,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["const",{"_index":174,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["constructor",{"_index":66,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["constructor(@inject(document",{"_index":559,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["constructor(@inject(social_auth_strategies",{"_index":502,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["constructor(@optional",{"_index":451,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["constructor(document",{"_index":537,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["constructor(private",{"_index":150,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"index.html":{}}}],["constructor(public",{"_index":470,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["constructor(socialauthstrategies",{"_index":483,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["constructor(socialauthutilservice",{"_index":67,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["constructor(type",{"_index":465,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["contains",{"_index":475,"title":{},"body":{"interfaces/NgxSocialAuthResponse.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cookie",{"_index":11,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["cookie_policy",{"_index":235,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{}}}],["core/social",{"_index":100,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{}}}],["create",{"_index":409,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{}}}],["createmsalinstance",{"_index":405,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["createrenderer",{"_index":576,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["current",{"_index":411,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["currentaccount",{"_index":416,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["data",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":654,"title":{},"body":{"overview.html":{}}}],["default",{"_index":24,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"miscellaneous/variables.html":{}}}],["defer",{"_index":224,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["defined",{"_index":47,"title":{},"body":{"interfaces/FacebookAuthResponse.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthResponse.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{}}}],["definition",{"_index":336,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["demo",{"_index":601,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":652,"title":{},"body":{"overview.html":{}}}],["describe",{"_index":590,"title":{},"body":{"miscellaneous/functions.html":{}}}],["description",{"_index":55,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{}}}],["details",{"_index":551,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["different",{"_index":440,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["dmytro",{"_index":120,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["docs",{"_index":647,"title":{},"body":{"index.html":{}}}],["document",{"_index":70,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["documentation",{"_index":646,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":122,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["e",{"_index":302,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["emits",{"_index":128,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["empty",{"_index":361,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["en_us",{"_index":23,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{}}}],["enable_profile_selector",{"_index":35,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["entity",{"_index":593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["enumerations",{"_index":582,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":172,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"injectables/SocialAuthUtilService.html":{}}}],["error$).pipe",{"_index":575,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["error').pipe",{"_index":572,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["event",{"_index":228,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["example",{"_index":60,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["examples",{"_index":644,"title":{},"body":{"index.html":{}}}],["export",{"_index":25,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"index.html":{}}}],["exports",{"_index":656,"title":{},"body":{"overview.html":{}}}],["external",{"_index":546,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["facebook",{"_index":58,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["facebook/facebook",{"_index":520,"title":{},"body":{"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["facebook_auth_config",{"_index":89,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["facebookauthconfig",{"_index":1,"title":{"interfaces/FacebookAuthConfig.html":{}},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/SocialAuthConfigMap.html":{}}}],["facebookauthresponse",{"_index":41,"title":{"interfaces/FacebookAuthResponse.html":{}},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/SocialAuthResponseMap.html":{}}}],["facebookauthsigninoptions",{"_index":31,"title":{"interfaces/FacebookAuthSignInOptions.html":{}},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/SignInOptionsMap.html":{}}}],["facebookauthsignoutoptions",{"_index":37,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/SignOutOptionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["facebookauthstateoptions",{"_index":39,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/StateOptionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["facebookauthstrategyservice",{"_index":50,"title":{"injectables/FacebookAuthStrategyService.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["facebookinstanceready",{"_index":135,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["factory",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["false",{"_index":133,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["fb",{"_index":148,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["fetch_basic_profile",{"_index":236,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{}}}],["find",{"_index":645,"title":{},"body":{"index.html":{}}}],["findstrategy(providertype",{"_index":511,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["forroot",{"_index":443,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["forroot(config",{"_index":444,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["frictionlessrequests",{"_index":12,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["fromauthresponse(response",{"_index":173,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["fromevent",{"_index":554,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["fromevent(script",{"_index":571,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["fromgoogleuser(googleuser",{"_index":292,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["frommsalinstance",{"_index":419,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["frommsalinstance$.pipe",{"_index":428,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["frompromise",{"_index":261,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["frompromise(auth2.init(this.googleauthconfig",{"_index":326,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["frompromise(googleauth.signin(options",{"_index":282,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["frompromise(googleauth.signout",{"_index":286,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["frompromise(instance.handleredirectpromise()).pipe",{"_index":424,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["frompromise(msalinstance.loginpopup(options",{"_index":378,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["frompromise(msalinstance.logout(options",{"_index":380,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["frompromise(msalwithaccount.instance.acquiretokensilent(options",{"_index":391,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["fromredirect",{"_index":423,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["fromsocialauthproviders",{"_index":450,"title":{},"body":{"modules/NgxSocialAuthModule.html":{},"miscellaneous/functions.html":{}}}],["fromsocialauthproviders(providers",{"_index":588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fromsocialauthproviders(socialauthproviders",{"_index":457,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["function",{"_index":22,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"injectables/FacebookAuthStrategyService.html":{}}}],["functionality",{"_index":639,"title":{},"body":{"index.html":{}}}],["functions",{"_index":585,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["functiontype",{"_index":194,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["gapi",{"_index":270,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["gapi.load(this.apiname",{"_index":328,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["generic",{"_index":289,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["getgoogleauth",{"_index":303,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["getmsalinstance",{"_index":392,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["getstate",{"_index":62,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"index.html":{}}}],["getstate(options",{"_index":74,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["getstate(providertype",{"_index":486,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["getting",{"_index":578,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["google",{"_index":253,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["google/google",{"_index":519,"title":{},"body":{"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["google_auth_config",{"_index":260,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["googleauth",{"_index":264,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["googleauthconfig",{"_index":232,"title":{"interfaces/GoogleAuthConfig.html":{}},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/SocialAuthConfigMap.html":{}}}],["googleauthresponse",{"_index":249,"title":{"interfaces/GoogleAuthResponse.html":{}},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/SocialAuthResponseMap.html":{}}}],["googleauthsigninoptions",{"_index":242,"title":{"interfaces/GoogleAuthSignInOptions.html":{}},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/SignInOptionsMap.html":{}}}],["googleauthsignoutoptions",{"_index":246,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/SignOutOptionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["googleauthstateoptions",{"_index":247,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/StateOptionsMap.html":{},"miscellaneous/typealiases.html":{}}}],["googleauthstrategyservice",{"_index":251,"title":{"injectables/GoogleAuthStrategyService.html":{}},"body":{"injectables/GoogleAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["googleuser.getauthresponse(includeauthorizationdata",{"_index":293,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["graph",{"_index":649,"title":{},"body":{"modules.html":{}}}],["handle",{"_index":421,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["handlefacebookinstanceerror(error",{"_index":217,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["handlefacebookinstanceloading(event",{"_index":227,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["handlefacebookinstanceready",{"_index":215,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["handlegapiloading",{"_index":321,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["handlegoogleauth(googleauth",{"_index":310,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["handlegoogleautherror(error",{"_index":312,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["handlemsalinstance(msalinstance",{"_index":399,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["handlemsalinstanceerror(error",{"_index":401,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["head",{"_index":544,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["hideflashcallback",{"_index":13,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["hosted_domain",{"_index":237,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{}}}],["htmlscriptelement",{"_index":564,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["https://alcdn.msauth.net/browser/2.8.0/js/msal",{"_index":365,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["https://angular.io/guide/angular",{"_index":123,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["https://apis.google.com/js/platform.js",{"_index":267,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["https://azuread.github.io/microsoft",{"_index":339,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["https://connect.facebook.net",{"_index":139,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["https://developer.mozilla.org/en",{"_index":560,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["https://developers.facebook.com/docs/javascript/advanced",{"_index":28,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["https://developers.facebook.com/docs/reference/javascript/fb.getauthresponse",{"_index":40,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["https://developers.facebook.com/docs/reference/javascript/fb.getloginstatus#servers",{"_index":38,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["https://developers.facebook.com/docs/reference/javascript/fb.login/v9.0#options",{"_index":30,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["https://developers.google.com/identity/sign",{"_index":240,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"miscellaneous/typealiases.html":{}}}],["identity",{"_index":599,"title":{},"body":{"index.html":{}}}],["implements",{"_index":56,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["import",{"_index":86,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"index.html":{}}}],["imports",{"_index":609,"title":{},"body":{"index.html":{}}}],["in/web/reference#auth_setup",{"_index":265,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["in/web/reference#gapiauth2authresponse",{"_index":248,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{}}}],["in/web/reference#gapiauth2signinoptions",{"_index":241,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{}}}],["in/web/reference#googleusergetauthresponseincludeauthorizationdata",{"_index":244,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"miscellaneous/typealiases.html":{}}}],["includeauthorizationdata",{"_index":245,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":46,"title":{},"body":{"interfaces/FacebookAuthResponse.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{}}}],["initauthapi(auth2",{"_index":325,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["inject",{"_index":87,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["inject(document",{"_index":153,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["inject(facebook_auth_config",{"_index":151,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["inject(google_auth_config",{"_index":272,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["inject(microsoft_auth_config",{"_index":370,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["injectable",{"_index":49,"title":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["injectables",{"_index":51,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{},"overview.html":{}}}],["injection",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('ngx.facebookauthconfig",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('ngx.googleauthconfig",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('ngx.microsoftauthconfig",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('ngx.socialauthstrategies",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injector",{"_index":591,"title":{},"body":{"miscellaneous/functions.html":{}}}],["install",{"_index":602,"title":{},"body":{"index.html":{}}}],["instance",{"_index":130,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["instance.getallaccounts",{"_index":415,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["interface",{"_index":0,"title":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"interfaces/NgxSocialAuthResponse.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{}},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"interfaces/NgxSocialAuthResponse.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"interfaces/NgxSocialAuthResponse.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{},"overview.html":{}}}],["isloginredirect",{"_index":334,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["isready",{"_index":209,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["issupport",{"_index":63,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["issupport(type",{"_index":80,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["isvalidproviderresponse(providerresponse",{"_index":297,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["js/ref/msal",{"_index":341,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["k",{"_index":466,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["key",{"_index":42,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/SocialAuthUtilService.html":{}}}],["lang",{"_index":14,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["legend",{"_index":653,"title":{},"body":{"overview.html":{}}}],["length",{"_index":159,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["library",{"_index":340,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"index.html":{}}}],["line",{"_index":158,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["line:max",{"_index":157,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["link",{"_index":460,"title":{},"body":{"interfaces/NgxSocialAuthModuleConfig.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["literal",{"_index":542,"title":{},"body":{"injectables/SocialAuthUtilService.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":410,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["loadauthapi(gapi",{"_index":327,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["loadauthinstance",{"_index":314,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["loaded",{"_index":187,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{}}}],["loaded$$.asobservable",{"_index":203,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{}}}],["loaded$$.complete",{"_index":191,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{}}}],["loaded$$.error('facebook",{"_index":202,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["loaded$$.error(`function",{"_index":200,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["loaded$$.next(gapi[this.apiname",{"_index":329,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["loaded$$.next(response",{"_index":190,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["loadfacebookinstance",{"_index":220,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["loadmsalinstance",{"_index":403,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["loadscript",{"_index":536,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["loadscript(attributes",{"_index":541,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["loadwithaccount(instance",{"_index":413,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["login",{"_index":185,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["logout",{"_index":186,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["map",{"_index":103,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["map((response",{"_index":425,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["map(account",{"_index":431,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["map(providerresponse",{"_index":164,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["map.ts",{"_index":518,"title":{},"body":{"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["map/sign",{"_index":116,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["map/state",{"_index":118,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{}}}],["matching",{"_index":44,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["merge",{"_index":555,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["merge(load",{"_index":574,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["mergemap",{"_index":556,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["mergemap(error",{"_index":573,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["method",{"_index":631,"title":{},"body":{"index.html":{}}}],["methods",{"_index":61,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{}}}],["microsoft",{"_index":356,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["microsoft/microsoft",{"_index":521,"title":{},"body":{"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["microsoft_auth_config",{"_index":362,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["microsoftauthconfig",{"_index":333,"title":{"interfaces/MicrosoftAuthConfig.html":{}},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"interfaces/SocialAuthConfigMap.html":{}}}],["microsoftauthresponse",{"_index":349,"title":{"interfaces/MicrosoftAuthResponse.html":{}},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SocialAuthResponseMap.html":{}}}],["microsoftauthsigninoptions",{"_index":344,"title":{"interfaces/MicrosoftAuthSignInOptions.html":{}},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"interfaces/SignInOptionsMap.html":{}}}],["microsoftauthstateoptions",{"_index":347,"title":{"interfaces/MicrosoftAuthStateOptions.html":{}},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"interfaces/StateOptionsMap.html":{}}}],["microsoftauthstrategyservice",{"_index":354,"title":{"injectables/MicrosoftAuthStrategyService.html":{}},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["microsoftautsignoutoptions",{"_index":330,"title":{"interfaces/MicrosoftAutSignOutOptions.html":{}},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"interfaces/SignOutOptionsMap.html":{}}}],["miscellaneous",{"_index":581,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":432,"title":{"modules/NgxSocialAuthModule.html":{}},"body":{"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"index.html":{},"overview.html":{}}}],["modules",{"_index":434,"title":{"modules.html":{}},"body":{"modules/NgxSocialAuthModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":447,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["more",{"_index":643,"title":{},"body":{"index.html":{}}}],["msal",{"_index":367,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["msalinstance",{"_index":368,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["msalinstance.loginredirect(options",{"_index":377,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["msalwithaccount.account",{"_index":390,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["name",{"_index":73,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":188,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":156,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["ngmodule",{"_index":448,"title":{},"body":{"modules/NgxSocialAuthModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":254,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["ngx",{"_index":594,"title":{},"body":{"index.html":{}}}],["ngxsocialauthmodule",{"_index":433,"title":{"modules/NgxSocialAuthModule.html":{}},"body":{"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"index.html":{},"modules.html":{}}}],["ngxsocialauthmodule.forroot",{"_index":481,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"index.html":{}}}],["ngxsocialauthmoduleconfig",{"_index":445,"title":{"interfaces/NgxSocialAuthModuleConfig.html":{}},"body":{"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{}}}],["ngxsocialauthprovider",{"_index":459,"title":{"classes/NgxSocialAuthProvider.html":{}},"body":{"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{}}}],["ngxsocialauthprovider(ngxsocialauthprovidertype.facebook",{"_index":612,"title":{},"body":{"index.html":{}}}],["ngxsocialauthprovider(ngxsocialauthprovidertype.google",{"_index":610,"title":{},"body":{"index.html":{}}}],["ngxsocialauthprovider(ngxsocialauthprovidertype.microsoft",{"_index":614,"title":{},"body":{"index.html":{}}}],["ngxsocialauthprovidertype",{"_index":81,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["ngxsocialauthprovidertype.facebook",{"_index":154,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["ngxsocialauthprovidertype.google",{"_index":276,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["ngxsocialauthprovidertype.microsoft",{"_index":372,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["ngxsocialauthprovidertype[providertype",{"_index":516,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["ngxsocialauthresponse",{"_index":109,"title":{"interfaces/NgxSocialAuthResponse.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["ngxsocialauthservice",{"_index":478,"title":{"injectables/NgxSocialAuthService.html":{}},"body":{"injectables/NgxSocialAuthService.html":{},"index.html":{}}}],["npm",{"_index":603,"title":{},"body":{"index.html":{}}}],["null",{"_index":136,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{}}}],["object",{"_index":290,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"interfaces/NgxSocialAuthResponse.html":{}}}],["object.keys(attributes).foreach(key",{"_index":565,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["object.keys(providerresponse).length",{"_index":299,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["observable",{"_index":79,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{}}}],["of(account",{"_index":430,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["of(authresponse",{"_index":181,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["of(currentaccount",{"_index":420,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["of(event",{"_index":230,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["of(googleauth.currentuser.get",{"_index":288,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["of(new",{"_index":406,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["of(null",{"_index":427,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["of({providerresponse",{"_index":295,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["ondestroy",{"_index":259,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["onfacebookinstanceready",{"_index":205,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["openid",{"_index":383,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["opportunity",{"_index":597,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":76,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{}}}],["options#strictmetadataemit",{"_index":125,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["options.includeauthorizationdata",{"_index":278,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["options?.account",{"_index":388,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["options?.isloginredirect",{"_index":376,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["otherwise",{"_index":132,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["out",{"_index":364,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthStrategy.html":{},"overview.html":{}}}],["overview",{"_index":651,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pair",{"_index":550,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["param",{"_index":412,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"miscellaneous/functions.html":{}}}],["parentelement",{"_index":568,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["parentmodule",{"_index":452,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["parfenov",{"_index":121,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["pass",{"_index":636,"title":{},"body":{"index.html":{}}}],["pipe",{"_index":317,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["popuprequest",{"_index":338,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["postlogoutredirecturi",{"_index":616,"title":{},"body":{"index.html":{}}}],["private",{"_index":134,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["profile",{"_index":384,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["profile_selector_ids",{"_index":36,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["prompt",{"_index":243,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["provide",{"_index":637,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":500,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["provider",{"_index":94,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provider.ts",{"_index":463,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["provider.ts:10",{"_index":469,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["provider.ts:11",{"_index":468,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["provider.ts:9",{"_index":467,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["provider/social",{"_index":114,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{}}}],["providerresponse",{"_index":165,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/NgxSocialAuthResponse.html":{}}}],["providers",{"_index":441,"title":{},"body":{"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"injectables/NgxSocialAuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"overview.html":{}}}],["providers.ts",{"_index":586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["providertype",{"_index":489,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["provides",{"_index":596,"title":{},"body":{"index.html":{}}}],["public",{"_index":464,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["readonly",{"_index":137,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"index.html":{}}}],["ready",{"_index":131,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["redirect",{"_index":422,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["redirect_uri",{"_index":238,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"index.html":{}}}],["redirectrequest",{"_index":335,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["renderer",{"_index":557,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["renderer2",{"_index":553,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["rendererfactory",{"_index":538,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["rendererfactory2",{"_index":539,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["represents",{"_index":474,"title":{},"body":{"interfaces/NgxSocialAuthResponse.html":{}}}],["require",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require.context",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":658,"title":{},"body":{"overview.html":{}}}],["resolveprovider",{"_index":587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["resolveprovider(provider",{"_index":592,"title":{},"body":{"miscellaneous/functions.html":{}}}],["response",{"_index":111,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["response.authresponse",{"_index":176,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["response.status",{"_index":177,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["response.ts",{"_index":473,"title":{},"body":{"interfaces/NgxSocialAuthResponse.html":{}}}],["response/social",{"_index":110,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["response?.account",{"_index":426,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["result",{"_index":43,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":45,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":143,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["return_scopes",{"_index":34,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["returns",{"_index":78,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"miscellaneous/functions.html":{}}}],["root",{"_index":501,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{},"index.html":{}}}],["rxjs",{"_index":99,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{}}}],["rxjs/internal",{"_index":262,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["rxjs/operators",{"_index":108,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["save",{"_index":604,"title":{},"body":{"index.html":{}}}],["scope",{"_index":33,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{}}}],["scopes",{"_index":382,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["script",{"_index":547,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["sdk.js",{"_index":141,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["second",{"_index":633,"title":{},"body":{"index.html":{}}}],["see",{"_index":27,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["selector",{"_index":620,"title":{},"body":{"index.html":{}}}],["setup",{"_index":29,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["signin",{"_index":482,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"index.html":{}}}],["signin(providertype",{"_index":490,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["signinoptionsmap",{"_index":115,"title":{"interfaces/SignInOptionsMap.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["signinoptionsmap[k",{"_index":503,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["signinoptionsmap[ngxsocialauthprovidertype.facebook",{"_index":160,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["signinoptionsmap[ngxsocialauthprovidertype.google",{"_index":277,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["signinoptionsmap[ngxsocialauthprovidertype.microsoft",{"_index":373,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["signout",{"_index":64,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"index.html":{}}}],["signout(options",{"_index":359,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["signout(providertype",{"_index":493,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["signoutoptionsmap",{"_index":363,"title":{"interfaces/SignOutOptionsMap.html":{}},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["signoutoptionsmap[k",{"_index":507,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["signoutoptionsmap[ngxsocialauthprovidertype.microsoft",{"_index":379,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["signs",{"_index":492,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["singin",{"_index":65,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["singin(options",{"_index":84,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["site",{"_index":648,"title":{},"body":{"index.html":{}}}],["skipself",{"_index":449,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["skipwhile",{"_index":104,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["skipwhile(googleauth",{"_index":305,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["skipwhile(isready",{"_index":208,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["skipwhile(msalinstance",{"_index":395,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["social",{"_index":92,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{},"index.html":{}}}],["social_auth_strategies",{"_index":496,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"miscellaneous/variables.html":{}}}],["socialauthconfigmap",{"_index":113,"title":{"interfaces/SocialAuthConfigMap.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/SocialAuthConfigMap.html":{}}}],["socialauthconfigmap[k",{"_index":471,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{}}}],["socialauthconfigmap[ngxsocialauthprovidertype.facebook",{"_index":152,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["socialauthconfigmap[ngxsocialauthprovidertype.google",{"_index":273,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["socialauthconfigmap[ngxsocialauthprovidertype.microsoft",{"_index":371,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["socialauthproviders",{"_index":455,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["socialauthresponsemap",{"_index":476,"title":{"interfaces/SocialAuthResponseMap.html":{}},"body":{"interfaces/NgxSocialAuthResponse.html":{},"interfaces/SocialAuthResponseMap.html":{}}}],["socialauthresponsemap[k",{"_index":477,"title":{},"body":{"interfaces/NgxSocialAuthResponse.html":{}}}],["socialauthstrategies",{"_index":485,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["socialauthstrategy",{"_index":91,"title":{"interfaces/SocialAuthStrategy.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"miscellaneous/variables.html":{}}}],["socialauthutilservice",{"_index":68,"title":{"injectables/SocialAuthUtilService.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["something",{"_index":628,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"interfaces/StateOptionsMap.html":{}}}],["spec\\.ts",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":183,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["src",{"_index":562,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["src/.../facebook",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../facebook.ts",{"_index":664,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../google",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../google.ts",{"_index":665,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../microsoft",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../social",{"_index":583,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/lib/auth",{"_index":472,"title":{},"body":{"interfaces/NgxSocialAuthResponse.html":{},"interfaces/SocialAuthResponseMap.html":{}}}],["src/lib/core/social",{"_index":534,"title":{},"body":{"injectables/SocialAuthUtilService.html":{},"miscellaneous/functions.html":{}}}],["src/lib/provider/social",{"_index":462,"title":{},"body":{"classes/NgxSocialAuthProvider.html":{},"interfaces/SocialAuthConfigMap.html":{}}}],["src/lib/social",{"_index":435,"title":{},"body":{"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"injectables/NgxSocialAuthService.html":{},"miscellaneous/enumerations.html":{}}}],["src/lib/strategy/facebook/facebook",{"_index":52,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["src/lib/strategy/facebook/facebook.ts",{"_index":6,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/strategy/facebook/facebook.ts:41",{"_index":48,"title":{},"body":{"interfaces/FacebookAuthResponse.html":{}}}],["src/lib/strategy/google/google",{"_index":252,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["src/lib/strategy/google/google.ts",{"_index":233,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"miscellaneous/typealiases.html":{}}}],["src/lib/strategy/google/google.ts:38",{"_index":250,"title":{},"body":{"interfaces/GoogleAuthResponse.html":{}}}],["src/lib/strategy/microsoft/microsoft",{"_index":355,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["src/lib/strategy/microsoft/microsoft.ts",{"_index":331,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{}}}],["src/lib/strategy/microsoft/microsoft.ts:16",{"_index":352,"title":{},"body":{"interfaces/MicrosoftAuthSignInOptions.html":{}}}],["src/lib/strategy/microsoft/microsoft.ts:23",{"_index":332,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{}}}],["src/lib/strategy/microsoft/microsoft.ts:30",{"_index":353,"title":{},"body":{"interfaces/MicrosoftAuthStateOptions.html":{}}}],["src/lib/strategy/microsoft/microsoft.ts:37",{"_index":351,"title":{},"body":{"interfaces/MicrosoftAuthResponse.html":{}}}],["src/lib/strategy/microsoft/microsoft.ts:5",{"_index":350,"title":{},"body":{"interfaces/MicrosoftAuthConfig.html":{}}}],["src/lib/strategy/options",{"_index":517,"title":{},"body":{"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/StateOptionsMap.html":{}}}],["src/lib/strategy/social",{"_index":525,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["started",{"_index":579,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["state",{"_index":488,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["stateoptionsmap",{"_index":117,"title":{"interfaces/StateOptionsMap.html":{}},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{}}}],["stateoptionsmap[k",{"_index":509,"title":{},"body":{"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["stateoptionsmap[ngxsocialauthprovidertype.facebook",{"_index":167,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["stateoptionsmap[ngxsocialauthprovidertype.google",{"_index":287,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["stateoptionsmap[ngxsocialauthprovidertype.microsoft",{"_index":381,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["static",{"_index":442,"title":{},"body":{"modules/NgxSocialAuthModule.html":{}}}],["status",{"_index":15,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"index.html":{}}}],["strategies.token",{"_index":498,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["strategies.token.ts",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":93,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["strategy.getstate(options",{"_index":510,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["strategy.issupport(providertype",{"_index":513,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["strategy.service.ts",{"_index":54,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["strategy.service.ts:41",{"_index":358,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["strategy.service.ts:47",{"_index":255,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["strategy.service.ts:48",{"_index":71,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["strategy.service.ts:53",{"_index":360,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["strategy.service.ts:54",{"_index":82,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{}}}],["strategy.service.ts:59",{"_index":85,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["strategy.service.ts:60",{"_index":257,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["strategy.service.ts:65",{"_index":258,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["strategy.service.ts:67",{"_index":83,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["strategy.service.ts:74",{"_index":75,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["strategy.service.ts:81",{"_index":256,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["strategy.signout(options",{"_index":508,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["strategy.singin(options",{"_index":505,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["strategy.ts",{"_index":526,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{}}}],["strategy.ts:13",{"_index":528,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{}}}],["strategy.ts:21",{"_index":533,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{}}}],["strategy.ts:28",{"_index":532,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{}}}],["strategy.ts:36",{"_index":527,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{}}}],["strategy/facebook/facebook",{"_index":523,"title":{},"body":{"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{}}}],["strategy/google/google",{"_index":522,"title":{},"body":{"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{}}}],["strategy/microsoft/microsoft",{"_index":524,"title":{},"body":{"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{}}}],["strategy/options",{"_index":499,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["strategy/social",{"_index":497,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["string",{"_index":18,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/SocialAuthUtilService.html":{}}}],["styleurls",{"_index":624,"title":{},"body":{"index.html":{}}}],["subject",{"_index":97,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["subscribe(authresponse",{"_index":642,"title":{},"body":{"index.html":{}}}],["support",{"_index":531,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{}}}],["supported",{"_index":600,"title":{},"body":{"index.html":{}}}],["supports",{"_index":632,"title":{},"body":{"index.html":{}}}],["switch",{"_index":193,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["switchmap",{"_index":105,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["switchmap((googleauth",{"_index":285,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["switchmap(account",{"_index":429,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["switchmap(auth2",{"_index":319,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["switchmap(googleauth",{"_index":281,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["switchmap(googleuser",{"_index":283,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["switchmap(msalinstance",{"_index":375,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["switchmap(msalwithaccount",{"_index":387,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["switchmap(this.fromauthresponse.bind(this",{"_index":163,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["switchmap(this.handlefacebookinstanceloading.bind(this",{"_index":226,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["switchmap(this.handlegapiloading.bind(this",{"_index":318,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["take",{"_index":106,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["take(1",{"_index":210,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["tap",{"_index":107,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["tap(this.handlefacebookinstanceready.bind(this",{"_index":213,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["tap(this.handlegoogleauth.bind(this",{"_index":308,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["tap(this.handlemsalinstance.bind(this",{"_index":397,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["templateurl",{"_index":622,"title":{},"body":{"index.html":{}}}],["this.apihost}/${this.apilang}/${this.apiresource",{"_index":146,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.apisource",{"_index":222,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.apiurl",{"_index":315,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.callfunction('login",{"_index":162,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.callfunction('logout",{"_index":166,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.callfunction('status",{"_index":168,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.config.lang",{"_index":144,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.createmsalinstance",{"_index":404,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.createrenderer",{"_index":558,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["this.document.defaultview?.fb",{"_index":149,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.document.defaultview?.gapi",{"_index":271,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.document.defaultview?.msal",{"_index":369,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.document[append",{"_index":569,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["this.facebookinstanceready",{"_index":206,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.facebookinstanceready$$.asobservable().pipe",{"_index":207,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.facebookinstanceready$$.error(error",{"_index":218,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.facebookinstanceready$$.next(true",{"_index":216,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.fb",{"_index":192,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.fb.getloginstatus(callback",{"_index":199,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.fb.init(this.config",{"_index":229,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.fb.login(callback",{"_index":196,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.fb.logout(callback",{"_index":198,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.findstrategy(providertype",{"_index":504,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["this.fromgoogleuser(googleuser",{"_index":284,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.gapi",{"_index":322,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.getgoogleauth().pipe",{"_index":280,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.getmsalinstance().pipe",{"_index":374,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.googleauth",{"_index":274,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.googleauth$$.asobservable().pipe",{"_index":304,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.googleauth$$.complete",{"_index":275,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.googleauth$$.error(error",{"_index":313,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.googleauth$$.next(googleauth",{"_index":311,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.initauthapi(auth2",{"_index":320,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.isvalidproviderresponse(providerresponse",{"_index":294,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.loadauthapi(this.gapi",{"_index":323,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.loadauthinstance().pipe",{"_index":307,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["this.loadfacebookinstance().pipe",{"_index":212,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.loadmsalinstance().pipe",{"_index":396,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.loadwithaccount(msalinstance",{"_index":386,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.msal.publicclientapplication(this.configuration",{"_index":407,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.msalinstance",{"_index":393,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.msalinstance$$.asobservable().pipe",{"_index":394,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.msalinstance$$.error(error",{"_index":402,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.msalinstance$$.next(msalinstance",{"_index":400,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.ngxsocialauthservice.getstate(ngxsocialauthprovidertype.google).subscribe(authresponse",{"_index":630,"title":{},"body":{"index.html":{}}}],["this.ngxsocialauthservice.signin(ngxsocialauthprovidertype.google",{"_index":640,"title":{},"body":{"index.html":{}}}],["this.ngxsocialauthservice.signin(ngxsocialauthprovidertype.google).subscribe(authresponse",{"_index":627,"title":{},"body":{"index.html":{}}}],["this.ngxsocialauthservice.signout(ngxsocialauthprovidertype.google).subscribe",{"_index":629,"title":{},"body":{"index.html":{}}}],["this.onfacebookinstanceready().pipe",{"_index":161,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["this.renderer.appendchild(parentelement",{"_index":570,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["this.renderer.createelement('script",{"_index":563,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["this.renderer.setattribute(script",{"_index":566,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["this.rendererfactory.createrenderer(null",{"_index":577,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["this.socialauthstrategies.find((strategy",{"_index":512,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["this.socialauthutilservice.loadscript({src",{"_index":221,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["this.throwundefinedprovidererror(providertype",{"_index":506,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["throw",{"_index":171,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{}}}],["throwerror",{"_index":98,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["throwerror('facebook",{"_index":179,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["throwerror('google",{"_index":296,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["throwerror('unable",{"_index":408,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["throwerror(`'fb",{"_index":231,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{}}}],["throwerror(`'gapi",{"_index":324,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{}}}],["throwerror(`provider",{"_index":515,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["throwerror(error",{"_index":219,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/SocialAuthUtilService.html":{}}}],["throwundefinedprovidererror(providertype",{"_index":514,"title":{},"body":{"injectables/NgxSocialAuthService.html":{}}}],["token",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":129,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":298,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["tslint:disable",{"_index":155,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["type",{"_index":19,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{},"injectables/GoogleAuthStrategyService.html":{},"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"interfaces/NgxSocialAuthModuleConfig.html":{},"classes/NgxSocialAuthProvider.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"injectables/SocialAuthUtilService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":95,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"classes/NgxSocialAuthProvider.html":{},"interfaces/NgxSocialAuthResponse.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SignInOptionsMap.html":{},"interfaces/SignOutOptionsMap.html":{},"interfaces/SocialAuthConfigMap.html":{},"interfaces/SocialAuthResponseMap.html":{},"interfaces/SocialAuthStrategy.html":{},"interfaces/StateOptionsMap.html":{}}}],["type.enum.ts",{"_index":584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typealiases",{"_index":662,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["undefined",{"_index":279,"title":{},"body":{"injectables/GoogleAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{}}}],["us/docs/web/html/element/script",{"_index":561,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["usage",{"_index":607,"title":{},"body":{"index.html":{}}}],["use",{"_index":618,"title":{},"body":{"index.html":{}}}],["used",{"_index":337,"title":{},"body":{"interfaces/MicrosoftAutSignOutOptions.html":{},"interfaces/MicrosoftAuthConfig.html":{},"interfaces/MicrosoftAuthResponse.html":{},"interfaces/MicrosoftAuthSignInOptions.html":{},"interfaces/MicrosoftAuthStateOptions.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":169,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"modules/NgxSocialAuthModule.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{},"index.html":{}}}],["user.read",{"_index":385,"title":{},"body":{"injectables/MicrosoftAuthStrategyService.html":{}}}],["users",{"_index":598,"title":{},"body":{"index.html":{}}}],["using",{"_index":439,"title":{},"body":{"modules/NgxSocialAuthModule.html":{},"injectables/NgxSocialAuthService.html":{},"index.html":{}}}],["util.service",{"_index":101,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{}}}],["util.service.ts",{"_index":535,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["util.service.ts:17",{"_index":540,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["util.service.ts:30",{"_index":545,"title":{},"body":{"injectables/SocialAuthUtilService.html":{}}}],["ux_mode",{"_index":239,"title":{},"body":{"interfaces/GoogleAuthConfig.html":{},"interfaces/GoogleAuthResponse.html":{},"interfaces/GoogleAuthSignInOptions.html":{}}}],["v9.0",{"_index":59,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"index.html":{}}}],["value",{"_index":549,"title":{},"body":{"injectables/SocialAuthUtilService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":666,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":16,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"index.html":{}}}],["void",{"_index":26,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{},"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"index.html":{}}}],["whether",{"_index":530,"title":{},"body":{"interfaces/SocialAuthStrategy.html":{}}}],["working",{"_index":608,"title":{},"body":{"index.html":{}}}],["xfbml",{"_index":17,"title":{},"body":{"interfaces/FacebookAuthConfig.html":{},"interfaces/FacebookAuthResponse.html":{},"interfaces/FacebookAuthSignInOptions.html":{}}}],["yarn",{"_index":605,"title":{},"body":{"index.html":{}}}],["yes",{"_index":77,"title":{},"body":{"injectables/FacebookAuthStrategyService.html":{},"injectables/GoogleAuthStrategyService.html":{},"injectables/MicrosoftAuthStrategyService.html":{},"injectables/NgxSocialAuthService.html":{},"interfaces/SocialAuthStrategy.html":{}}}],["your_app_id",{"_index":613,"title":{},"body":{"index.html":{}}}],["your_client_id",{"_index":611,"title":{},"body":{"index.html":{}}}],["your_redirect_uri",{"_index":641,"title":{},"body":{"index.html":{}}}],["your_redirect_uri_after_logout",{"_index":617,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":657,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/FacebookAuthConfig.html":{"url":"interfaces/FacebookAuthConfig.html","title":"interface - FacebookAuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FacebookAuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/facebook/facebook.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        appId\n                                \n                                \n                                            Optional\n                                        cookie\n                                \n                                \n                                            Optional\n                                        frictionlessRequests\n                                \n                                \n                                            Optional\n                                        hideFlashCallback\n                                \n                                \n                                            Optional\n                                        lang\n                                \n                                \n                                            Optional\n                                        status\n                                \n                                \n                                        version\n                                \n                                \n                                            Optional\n                                        xfbml\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appId\n                                    \n                                \n                                \n                                    \n                                        appId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cookie\n                                    \n                                \n                                \n                                    \n                                        cookie:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frictionlessRequests\n                                    \n                                \n                                \n                                    \n                                        frictionlessRequests:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideFlashCallback\n                                    \n                                \n                                \n                                    \n                                        hideFlashCallback:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lang\n                                    \n                                \n                                \n                                    \n                                        lang:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    'en_US' by default\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xfbml\n                                    \n                                \n                                \n                                    \n                                        xfbml:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FacebookAuthConfig {\n  version: string;\n  appId?: string;\n  cookie?: boolean;\n  status?: boolean;\n  xfbml?: boolean;\n  frictionlessRequests?: boolean;\n  hideFlashCallback?: () => void;\n  /**\n   * 'en_US' by default\n   *\n   * @see https://developers.facebook.com/docs/javascript/advanced-setup\n   */\n  lang?: string;\n}\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.login/v9.0#options\n */\nexport interface FacebookAuthSignInOptions {\n  auth_type?: string;\n  scope?: string;\n  return_scopes?: boolean;\n  enable_profile_selector?: boolean;\n  profile_selector_ids?: string;\n}\n\nexport type FacebookAuthSignOutOptions = any;\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.getLoginStatus#servers\n */\nexport type FacebookAuthStateOptions = boolean;\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.getAuthResponse\n */\nexport interface FacebookAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FacebookAuthResponse.html":{"url":"interfaces/FacebookAuthResponse.html","title":"interface - FacebookAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FacebookAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/facebook/facebook.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/facebook/facebook.ts:41\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface FacebookAuthConfig {\n  version: string;\n  appId?: string;\n  cookie?: boolean;\n  status?: boolean;\n  xfbml?: boolean;\n  frictionlessRequests?: boolean;\n  hideFlashCallback?: () => void;\n  /**\n   * 'en_US' by default\n   *\n   * @see https://developers.facebook.com/docs/javascript/advanced-setup\n   */\n  lang?: string;\n}\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.login/v9.0#options\n */\nexport interface FacebookAuthSignInOptions {\n  auth_type?: string;\n  scope?: string;\n  return_scopes?: boolean;\n  enable_profile_selector?: boolean;\n  profile_selector_ids?: string;\n}\n\nexport type FacebookAuthSignOutOptions = any;\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.getLoginStatus#servers\n */\nexport type FacebookAuthStateOptions = boolean;\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.getAuthResponse\n */\nexport interface FacebookAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FacebookAuthSignInOptions.html":{"url":"interfaces/FacebookAuthSignInOptions.html","title":"interface - FacebookAuthSignInOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FacebookAuthSignInOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/facebook/facebook.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        auth_type\n                                \n                                \n                                            Optional\n                                        enable_profile_selector\n                                \n                                \n                                            Optional\n                                        profile_selector_ids\n                                \n                                \n                                            Optional\n                                        return_scopes\n                                \n                                \n                                            Optional\n                                        scope\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        auth_type\n                                    \n                                \n                                \n                                    \n                                        auth_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enable_profile_selector\n                                    \n                                \n                                \n                                    \n                                        enable_profile_selector:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        profile_selector_ids\n                                    \n                                \n                                \n                                    \n                                        profile_selector_ids:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        return_scopes\n                                    \n                                \n                                \n                                    \n                                        return_scopes:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FacebookAuthConfig {\n  version: string;\n  appId?: string;\n  cookie?: boolean;\n  status?: boolean;\n  xfbml?: boolean;\n  frictionlessRequests?: boolean;\n  hideFlashCallback?: () => void;\n  /**\n   * 'en_US' by default\n   *\n   * @see https://developers.facebook.com/docs/javascript/advanced-setup\n   */\n  lang?: string;\n}\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.login/v9.0#options\n */\nexport interface FacebookAuthSignInOptions {\n  auth_type?: string;\n  scope?: string;\n  return_scopes?: boolean;\n  enable_profile_selector?: boolean;\n  profile_selector_ids?: string;\n}\n\nexport type FacebookAuthSignOutOptions = any;\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.getLoginStatus#servers\n */\nexport type FacebookAuthStateOptions = boolean;\n\n/**\n * @see https://developers.facebook.com/docs/reference/javascript/FB.getAuthResponse\n */\nexport interface FacebookAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FacebookAuthStrategyService.html":{"url":"injectables/FacebookAuthStrategyService.html","title":"injectable - FacebookAuthStrategyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FacebookAuthStrategyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/facebook/facebook-auth-strategy.service.ts\n        \n\n            \n                Description\n            \n            \n                Implements authentication by Facebook v9.0\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getState\n                            \n                            \n                                isSupport\n                            \n                            \n                                signOut\n                            \n                            \n                                singIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialAuthUtilService: SocialAuthUtilService, config, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/facebook/facebook-auth-strategy.service.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialAuthUtilService\n                                                  \n                                                        \n                                                                        SocialAuthUtilService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \ngetState(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/facebook/facebook-auth-strategy.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupport\n                        \n                        \n                    \n                \n            \n            \n                \nisSupport(type: NgxSocialAuthProviderType)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/facebook/facebook-auth-strategy.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                NgxSocialAuthProviderType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/facebook/facebook-auth-strategy.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singIn\n                        \n                        \n                    \n                \n            \n            \n                \nsingIn(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/facebook/facebook-auth-strategy.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {FACEBOOK_AUTH_CONFIG} from './facebook-auth-config.token';\nimport {SocialAuthStrategy} from '../social-auth-strategy';\nimport {NgxSocialAuthProviderType} from '../../social-auth-provider-type.enum';\nimport {BehaviorSubject, Observable, of, Subject, throwError} from 'rxjs';\nimport {SocialAuthUtilService} from '../../core/social-auth-util.service';\nimport {catchError, map, skipWhile, switchMap, take, tap} from 'rxjs/operators';\nimport {NgxSocialAuthResponse} from '../../auth-response/social-auth-response';\nimport {DOCUMENT} from '@angular/common';\nimport {SocialAuthConfigMap} from '../../provider/social-auth-config-map';\nimport {SignInOptionsMap} from '../options-map/sign-in-options-map';\nimport {StateOptionsMap} from '../options-map/state-options-map';\n\n/**\n * Implements authentication by Facebook v9.0\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Injectable()\nexport class FacebookAuthStrategyService implements\n  SocialAuthStrategy {\n\n  /**\n   * An behaviour subject that emits 'true' when facebook instance is ready, otherwise 'false'\n   */\n  private facebookInstanceReady$$: BehaviorSubject | null = null;\n\n  private readonly apiHost = 'https://connect.facebook.net';\n\n  private readonly apiResource = 'sdk.js';\n\n  private get apiLang(): string {\n    return this.config.lang ? this.config.lang : 'en_US';\n  }\n\n  private get apiSource(): string {\n    return `${this.apiHost}/${this.apiLang}/${this.apiResource}`;\n  }\n\n  /**\n   * An instance of Facebook API\n   */\n  private get FB(): any {\n    return this.document.defaultView?.FB;\n  }\n\n  constructor(private readonly socialAuthUtilService: SocialAuthUtilService,\n              @Inject(FACEBOOK_AUTH_CONFIG) private readonly config: SocialAuthConfigMap[NgxSocialAuthProviderType.Facebook],\n              @Inject(DOCUMENT) private readonly document: Document) {}\n\n  isSupport(type: NgxSocialAuthProviderType): boolean {\n    return type === NgxSocialAuthProviderType.Facebook;\n  }\n\n  // tslint:disable-next-line:max-line-length\n  singIn(options?: SignInOptionsMap[NgxSocialAuthProviderType.Facebook]): Observable> {\n    return this.onFacebookInstanceReady().pipe(\n      switchMap(() => this.callFunction('login', options)),\n      switchMap(this.fromAuthResponse.bind(this)),\n      map(providerResponse => ({providerResponse}))\n    );\n  }\n\n  signOut(): Observable {\n    return this.onFacebookInstanceReady().pipe(\n      switchMap(() => this.callFunction('logout'))\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  getState(options?: StateOptionsMap[NgxSocialAuthProviderType.Facebook]): Observable> {\n    return this.onFacebookInstanceReady().pipe(\n      switchMap(() => this.callFunction('status', options)),\n      switchMap(this.fromAuthResponse.bind(this)),\n      map(providerResponse => ({providerResponse}))\n    );\n  }\n\n\n  /**\n   * Emits providerResponse from auth response if user is authenticated, otherwise throw error\n   */\n  private fromAuthResponse(response: any): Observable {\n    const authResponse = response.authResponse;\n\n    if (response.status !== 'connected' || !authResponse) {\n      return throwError('Facebook user is not authorized');\n    }\n\n    return of(authResponse);\n  }\n\n  /**\n   * Call 'FB' function with specific options\n   */\n  private callFunction(functionType: 'login' | 'logout' | 'status', options?: any): Observable {\n    const loaded$$ = new Subject();\n\n    const callback = (response?: any) => {\n      loaded$$.next(response);\n      loaded$$.complete();\n    };\n\n    if (this.FB) {\n      switch (functionType) {\n        case 'login':\n          this.FB.login(callback, options);\n          break;\n        case 'logout':\n          this.FB.logout(callback, options);\n          break;\n        case 'status':\n          this.FB.getLoginStatus(callback, options);\n          break;\n        default:\n          loaded$$.error(`Function type: '${functionType}' is not available`);\n      }\n    } else {\n      loaded$$.error('Facebook instance is not available');\n    }\n\n    return loaded$$.asObservable();\n  }\n\n\n  /**\n   * Emits next when facebook instance is ready, then completes\n   */\n  private onFacebookInstanceReady(): Observable {\n    if (this.facebookInstanceReady$$) {\n      return this.facebookInstanceReady$$.asObservable().pipe(\n        skipWhile(isReady => !isReady),\n        take(1)\n      );\n    }\n\n    this.facebookInstanceReady$$ = new BehaviorSubject(false);\n\n    return this.loadFacebookInstance().pipe(\n      tap(this.handleFacebookInstanceReady.bind(this)),\n      catchError(this.handleFacebookInstanceError.bind(this))\n    );\n  }\n\n  private handleFacebookInstanceReady(): void {\n    if (!this.facebookInstanceReady$$) {\n      return;\n    }\n\n    this.facebookInstanceReady$$.next(true);\n  }\n\n  private handleFacebookInstanceError(error: any): Observable {\n    if (this.facebookInstanceReady$$) {\n      this.facebookInstanceReady$$.error(error);\n    }\n\n    return throwError(error);\n  }\n\n  private loadFacebookInstance(): Observable {\n    return this.socialAuthUtilService.loadScript({src: this.apiSource, async: true, defer: true}, 'body').pipe(\n      switchMap(this.handleFacebookInstanceLoading.bind(this))\n    );\n  }\n\n  private handleFacebookInstanceLoading(event: Event): Observable {\n    if (this.FB) {\n      this.FB.init(this.config);\n      return of(event);\n    }\n\n    return throwError(`'FB' is not loaded`);\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleAuthConfig.html":{"url":"interfaces/GoogleAuthConfig.html","title":"interface - GoogleAuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleAuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/google/google.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        client_id\n                                \n                                \n                                            Optional\n                                        cookie_policy\n                                \n                                \n                                            Optional\n                                        fetch_basic_profile\n                                \n                                \n                                            Optional\n                                        hosted_domain\n                                \n                                \n                                            Optional\n                                        redirect_uri\n                                \n                                \n                                            Optional\n                                        scope\n                                \n                                \n                                            Optional\n                                        ux_mode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        client_id\n                                    \n                                \n                                \n                                    \n                                        client_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cookie_policy\n                                    \n                                \n                                \n                                    \n                                        cookie_policy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fetch_basic_profile\n                                    \n                                \n                                \n                                    \n                                        fetch_basic_profile:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hosted_domain\n                                    \n                                \n                                \n                                    \n                                        hosted_domain:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirect_uri\n                                    \n                                \n                                \n                                    \n                                        redirect_uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ux_mode\n                                    \n                                \n                                \n                                    \n                                        ux_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleAuthConfig {\n  client_id: string;\n  cookie_policy?: string;\n  scope?: string;\n  fetch_basic_profile?: string;\n  hosted_domain?: string;\n  ux_mode?: string;\n  redirect_uri?: string;\n}\n\n/**\n * @see https://developers.google.com/identity/sign-in/web/reference#gapiauth2signinoptions\n */\nexport interface GoogleAuthSignInOptions {\n  prompt?: string;\n  scope?: string;\n  ux_mode?: string;\n  redirect_uri?: string;\n  /**\n   * @see https://developers.google.com/identity/sign-in/web/reference#googleusergetauthresponseincludeauthorizationdata\n   */\n  includeAuthorizationData?: boolean;\n}\n\nexport type GoogleAuthSignOutOptions = any;\n\n/**\n * https://developers.google.com/identity/sign-in/web/reference#googleusergetauthresponseincludeauthorizationdata\n */\nexport type GoogleAuthStateOptions = boolean;\n\n/**\n * @see https://developers.google.com/identity/sign-in/web/reference#gapiauth2authresponse\n */\nexport interface GoogleAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleAuthResponse.html":{"url":"interfaces/GoogleAuthResponse.html","title":"interface - GoogleAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/google/google.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/google/google.ts:38\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface GoogleAuthConfig {\n  client_id: string;\n  cookie_policy?: string;\n  scope?: string;\n  fetch_basic_profile?: string;\n  hosted_domain?: string;\n  ux_mode?: string;\n  redirect_uri?: string;\n}\n\n/**\n * @see https://developers.google.com/identity/sign-in/web/reference#gapiauth2signinoptions\n */\nexport interface GoogleAuthSignInOptions {\n  prompt?: string;\n  scope?: string;\n  ux_mode?: string;\n  redirect_uri?: string;\n  /**\n   * @see https://developers.google.com/identity/sign-in/web/reference#googleusergetauthresponseincludeauthorizationdata\n   */\n  includeAuthorizationData?: boolean;\n}\n\nexport type GoogleAuthSignOutOptions = any;\n\n/**\n * https://developers.google.com/identity/sign-in/web/reference#googleusergetauthresponseincludeauthorizationdata\n */\nexport type GoogleAuthStateOptions = boolean;\n\n/**\n * @see https://developers.google.com/identity/sign-in/web/reference#gapiauth2authresponse\n */\nexport interface GoogleAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleAuthSignInOptions.html":{"url":"interfaces/GoogleAuthSignInOptions.html","title":"interface - GoogleAuthSignInOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GoogleAuthSignInOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/google/google.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        includeAuthorizationData\n                                \n                                \n                                            Optional\n                                        prompt\n                                \n                                \n                                            Optional\n                                        redirect_uri\n                                \n                                \n                                            Optional\n                                        scope\n                                \n                                \n                                            Optional\n                                        ux_mode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        includeAuthorizationData\n                                    \n                                \n                                \n                                    \n                                        includeAuthorizationData:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prompt\n                                    \n                                \n                                \n                                    \n                                        prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirect_uri\n                                    \n                                \n                                \n                                    \n                                        redirect_uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ux_mode\n                                    \n                                \n                                \n                                    \n                                        ux_mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleAuthConfig {\n  client_id: string;\n  cookie_policy?: string;\n  scope?: string;\n  fetch_basic_profile?: string;\n  hosted_domain?: string;\n  ux_mode?: string;\n  redirect_uri?: string;\n}\n\n/**\n * @see https://developers.google.com/identity/sign-in/web/reference#gapiauth2signinoptions\n */\nexport interface GoogleAuthSignInOptions {\n  prompt?: string;\n  scope?: string;\n  ux_mode?: string;\n  redirect_uri?: string;\n  /**\n   * @see https://developers.google.com/identity/sign-in/web/reference#googleusergetauthresponseincludeauthorizationdata\n   */\n  includeAuthorizationData?: boolean;\n}\n\nexport type GoogleAuthSignOutOptions = any;\n\n/**\n * https://developers.google.com/identity/sign-in/web/reference#googleusergetauthresponseincludeauthorizationdata\n */\nexport type GoogleAuthStateOptions = boolean;\n\n/**\n * @see https://developers.google.com/identity/sign-in/web/reference#gapiauth2authresponse\n */\nexport interface GoogleAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAuthStrategyService.html":{"url":"injectables/GoogleAuthStrategyService.html","title":"injectable - GoogleAuthStrategyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAuthStrategyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/google/google-auth-strategy.service.ts\n        \n\n            \n                Description\n            \n            \n                Implements authentication by Google\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getState\n                            \n                            \n                                isSupport\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                signOut\n                            \n                            \n                                singIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialAuthUtilService: SocialAuthUtilService, googleAuthConfig, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/google/google-auth-strategy.service.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialAuthUtilService\n                                                  \n                                                        \n                                                                        SocialAuthUtilService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        googleAuthConfig\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \ngetState(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/google/google-auth-strategy.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupport\n                        \n                        \n                    \n                \n            \n            \n                \nisSupport(type: NgxSocialAuthProviderType)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/google/google-auth-strategy.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                NgxSocialAuthProviderType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/google/google-auth-strategy.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/google/google-auth-strategy.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singIn\n                        \n                        \n                    \n                \n            \n            \n                \nsingIn(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/google/google-auth-strategy.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, OnDestroy} from '@angular/core';\nimport {SocialAuthStrategy} from '../social-auth-strategy';\nimport {GOOGLE_AUTH_CONFIG} from './google-auth-config.token';\nimport {fromPromise} from 'rxjs/internal-compatibility';\nimport {catchError, skipWhile, switchMap, take, tap} from 'rxjs/operators';\nimport {BehaviorSubject, Observable, of, Subject, throwError} from 'rxjs';\nimport {NgxSocialAuthProviderType} from '../../social-auth-provider-type.enum';\nimport {NgxSocialAuthResponse} from '../../auth-response/social-auth-response';\nimport {SocialAuthUtilService} from '../../core/social-auth-util.service';\nimport {DOCUMENT} from '@angular/common';\nimport {SocialAuthConfigMap} from '../../provider/social-auth-config-map';\nimport {SignInOptionsMap} from '../options-map/sign-in-options-map';\nimport {StateOptionsMap} from '../options-map/state-options-map';\n\n/**\n * Implements authentication by Google\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Injectable()\nexport class GoogleAuthStrategyService implements\n  SocialAuthStrategy, OnDestroy {\n\n  /**\n   * A behaviour subject that emits google auth instance\n   */\n  private googleAuth$$: BehaviorSubject | null = null;\n\n  /**\n   * @see https://developers.google.com/identity/sign-in/web/reference#auth_setup\n   */\n  private readonly APIUrl = 'https://apis.google.com/js/platform.js';\n\n  /**\n   * @see https://developers.google.com/identity/sign-in/web/reference#auth_setup\n   */\n  private readonly APIName = 'auth2';\n\n  /**\n   * An instance of Google API\n   */\n  private get gapi(): any {\n    return this.document.defaultView?.gapi;\n  }\n\n  constructor(private readonly socialAuthUtilService: SocialAuthUtilService,\n              @Inject(GOOGLE_AUTH_CONFIG) private readonly googleAuthConfig: SocialAuthConfigMap[NgxSocialAuthProviderType.Google],\n              @Inject(DOCUMENT) private readonly document: Document) {\n  }\n\n  ngOnDestroy(): void {\n    if (this.googleAuth$$) {\n      this.googleAuth$$.complete();\n    }\n  }\n\n  isSupport(type: NgxSocialAuthProviderType): boolean {\n    return type === NgxSocialAuthProviderType.Google;\n  }\n\n  // tslint:disable-next-line:max-line-length\n  singIn(options?: SignInOptionsMap[NgxSocialAuthProviderType.Google]): Observable> {\n    const includeAuthorizationData = options ? options.includeAuthorizationData : undefined;\n\n    return this.getGoogleAuth().pipe(\n      switchMap(googleAuth => fromPromise(googleAuth.signIn(options))),\n      switchMap(googleUser => this.fromGoogleUser(googleUser, includeAuthorizationData))\n    );\n  }\n\n  signOut(): Observable {\n    return this.getGoogleAuth().pipe(\n      switchMap((googleAuth) => fromPromise(googleAuth.signOut()))\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  getState(options?: StateOptionsMap[NgxSocialAuthProviderType.Google]): Observable> {\n    return this.getGoogleAuth().pipe(\n      switchMap(googleAuth => of(googleAuth.currentUser.get())),\n      switchMap(googleUser => this.fromGoogleUser(googleUser, options))\n    );\n  }\n\n  /**\n   * Returns generic auth response object based on google user\n   */\n  // tslint:disable-next-line:max-line-length\n  private fromGoogleUser(googleUser: any, includeAuthorizationData?: boolean): Observable> {\n    const providerResponse = googleUser.getAuthResponse(includeAuthorizationData);\n\n    if (this.isValidProviderResponse(providerResponse)) {\n      return of({providerResponse});\n    }\n\n    return throwError('Google user is not authorized');\n  }\n\n  private isValidProviderResponse(providerResponse: any): boolean {\n    try {\n      return Object.keys(providerResponse).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  private getGoogleAuth(): Observable {\n    if (this.googleAuth$$) {\n      return this.googleAuth$$.asObservable().pipe(\n        skipWhile(googleAuth => !googleAuth),\n        take(1)\n      );\n    }\n\n    this.googleAuth$$ = new BehaviorSubject(null);\n\n    return this.loadAuthInstance().pipe(\n      tap(this.handleGoogleAuth.bind(this)),\n      catchError(this.handleGoogleAuthError.bind(this))\n    );\n  }\n\n  private handleGoogleAuth(googleAuth: any): void {\n    if (!this.googleAuth$$) {\n      return;\n    }\n\n    this.googleAuth$$.next(googleAuth);\n  }\n\n  private handleGoogleAuthError(error: any): Observable {\n    if (this.googleAuth$$) {\n      this.googleAuth$$.error(error);\n    }\n\n    return throwError(error);\n  }\n\n  private loadAuthInstance(): Observable {\n    return this.socialAuthUtilService.loadScript({src: this.APIUrl, async: true, defer: true}, 'body')\n      .pipe(\n        switchMap(this.handleGapiLoading.bind(this)),\n        switchMap(auth2 => this.initAuthApi(auth2))\n      );\n  }\n\n  private handleGapiLoading(): Observable {\n    if (this.gapi) {\n      return this.loadAuthApi(this.gapi);\n    }\n\n    return throwError(`'gapi' is not loaded`);\n  }\n\n  private initAuthApi(auth2: any): Observable {\n    return fromPromise(auth2.init(this.googleAuthConfig));\n  }\n\n  private loadAuthApi(gapi: any): Observable {\n    const loaded$$ = new Subject();\n\n    gapi.load(this.APIName, () => {\n      loaded$$.next(gapi[this.APIName]);\n      loaded$$.complete();\n    });\n\n    return loaded$$.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MicrosoftAutSignOutOptions.html":{"url":"interfaces/MicrosoftAutSignOutOptions.html","title":"interface - MicrosoftAutSignOutOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MicrosoftAutSignOutOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/microsoft/microsoft.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/microsoft/microsoft.ts:23\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface MicrosoftAuthConfig {\n  [key: string]: any;\n}\n\n/**\n * When [isLoginRedirect] is true, then [RedirectRequest] type definition should be used, otherwise [PopupRequest]. Default is false\n *\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_popuprequest_.html#popuprequest\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_redirectrequest_.html#redirectrequest\n */\nexport interface MicrosoftAuthSignInOptions {\n  isLoginRedirect?: boolean;\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_endsessionrequest_.html#endsessionrequest\n */\nexport interface MicrosoftAutSignOutOptions {\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_silentrequest_.html#silentrequest\n */\nexport interface MicrosoftAuthStateOptions {\n  [key: string]: any;\n}\n\n/**\n * @see @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-common/classes/_src_response_authenticationresult_.authenticationresult.html\n */\nexport interface MicrosoftAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MicrosoftAuthConfig.html":{"url":"interfaces/MicrosoftAuthConfig.html","title":"interface - MicrosoftAuthConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MicrosoftAuthConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/microsoft/microsoft.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/microsoft/microsoft.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface MicrosoftAuthConfig {\n  [key: string]: any;\n}\n\n/**\n * When [isLoginRedirect] is true, then [RedirectRequest] type definition should be used, otherwise [PopupRequest]. Default is false\n *\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_popuprequest_.html#popuprequest\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_redirectrequest_.html#redirectrequest\n */\nexport interface MicrosoftAuthSignInOptions {\n  isLoginRedirect?: boolean;\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_endsessionrequest_.html#endsessionrequest\n */\nexport interface MicrosoftAutSignOutOptions {\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_silentrequest_.html#silentrequest\n */\nexport interface MicrosoftAuthStateOptions {\n  [key: string]: any;\n}\n\n/**\n * @see @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-common/classes/_src_response_authenticationresult_.authenticationresult.html\n */\nexport interface MicrosoftAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MicrosoftAuthResponse.html":{"url":"interfaces/MicrosoftAuthResponse.html","title":"interface - MicrosoftAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MicrosoftAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/microsoft/microsoft.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/microsoft/microsoft.ts:37\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface MicrosoftAuthConfig {\n  [key: string]: any;\n}\n\n/**\n * When [isLoginRedirect] is true, then [RedirectRequest] type definition should be used, otherwise [PopupRequest]. Default is false\n *\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_popuprequest_.html#popuprequest\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_redirectrequest_.html#redirectrequest\n */\nexport interface MicrosoftAuthSignInOptions {\n  isLoginRedirect?: boolean;\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_endsessionrequest_.html#endsessionrequest\n */\nexport interface MicrosoftAutSignOutOptions {\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_silentrequest_.html#silentrequest\n */\nexport interface MicrosoftAuthStateOptions {\n  [key: string]: any;\n}\n\n/**\n * @see @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-common/classes/_src_response_authenticationresult_.authenticationresult.html\n */\nexport interface MicrosoftAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MicrosoftAuthSignInOptions.html":{"url":"interfaces/MicrosoftAuthSignInOptions.html","title":"interface - MicrosoftAuthSignInOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MicrosoftAuthSignInOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/microsoft/microsoft.ts\n        \n\n            \n                Description\n            \n            \n                When [isLoginRedirect] is true, then [RedirectRequest] type definition should be used, otherwise [PopupRequest]. Default is false\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        isLoginRedirect\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/microsoft/microsoft.ts:16\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isLoginRedirect\n                                    \n                                \n                                \n                                    \n                                        isLoginRedirect:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MicrosoftAuthConfig {\n  [key: string]: any;\n}\n\n/**\n * When [isLoginRedirect] is true, then [RedirectRequest] type definition should be used, otherwise [PopupRequest]. Default is false\n *\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_popuprequest_.html#popuprequest\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_redirectrequest_.html#redirectrequest\n */\nexport interface MicrosoftAuthSignInOptions {\n  isLoginRedirect?: boolean;\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_endsessionrequest_.html#endsessionrequest\n */\nexport interface MicrosoftAutSignOutOptions {\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_silentrequest_.html#silentrequest\n */\nexport interface MicrosoftAuthStateOptions {\n  [key: string]: any;\n}\n\n/**\n * @see @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-common/classes/_src_response_authenticationresult_.authenticationresult.html\n */\nexport interface MicrosoftAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MicrosoftAuthStateOptions.html":{"url":"interfaces/MicrosoftAuthStateOptions.html","title":"interface - MicrosoftAuthStateOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MicrosoftAuthStateOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/microsoft/microsoft.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/microsoft/microsoft.ts:30\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface MicrosoftAuthConfig {\n  [key: string]: any;\n}\n\n/**\n * When [isLoginRedirect] is true, then [RedirectRequest] type definition should be used, otherwise [PopupRequest]. Default is false\n *\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_popuprequest_.html#popuprequest\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_redirectrequest_.html#redirectrequest\n */\nexport interface MicrosoftAuthSignInOptions {\n  isLoginRedirect?: boolean;\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_endsessionrequest_.html#endsessionrequest\n */\nexport interface MicrosoftAutSignOutOptions {\n  [key: string]: any;\n}\n\n/**\n * @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-browser/modules/_src_request_silentrequest_.html#silentrequest\n */\nexport interface MicrosoftAuthStateOptions {\n  [key: string]: any;\n}\n\n/**\n * @see @see https://azuread.github.io/microsoft-authentication-library-for-js/ref/msal-common/classes/_src_response_authenticationresult_.authenticationresult.html\n */\nexport interface MicrosoftAuthResponse {\n  [key: string]: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MicrosoftAuthStrategyService.html":{"url":"injectables/MicrosoftAuthStrategyService.html","title":"injectable - MicrosoftAuthStrategyService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MicrosoftAuthStrategyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/microsoft/microsoft-auth-strategy.service.ts\n        \n\n            \n                Description\n            \n            \n                Implements authentication by Microsoft\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getState\n                            \n                            \n                                isSupport\n                            \n                            \n                                signOut\n                            \n                            \n                                singIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialAuthUtilService: SocialAuthUtilService, configuration, document: Document)\n                    \n                \n                        \n                            \n                                Defined in src/lib/strategy/microsoft/microsoft-auth-strategy.service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialAuthUtilService\n                                                  \n                                                        \n                                                                        SocialAuthUtilService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configuration\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \ngetState(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/microsoft/microsoft-auth-strategy.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupport\n                        \n                        \n                    \n                \n            \n            \n                \nisSupport(type: NgxSocialAuthProviderType)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/microsoft/microsoft-auth-strategy.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                NgxSocialAuthProviderType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/microsoft/microsoft-auth-strategy.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singIn\n                        \n                        \n                    \n                \n            \n            \n                \nsingIn(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/microsoft/microsoft-auth-strategy.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {SocialAuthStrategy} from '../social-auth-strategy';\nimport {NgxSocialAuthProviderType} from '../../social-auth-provider-type.enum';\nimport {BehaviorSubject, EMPTY, Observable, of, throwError} from 'rxjs';\nimport {MICROSOFT_AUTH_CONFIG} from './microsoft-auth-config.token';\nimport {NgxSocialAuthResponse} from '../../auth-response/social-auth-response';\nimport {fromPromise} from 'rxjs/internal-compatibility';\nimport {catchError, map, skipWhile, switchMap, take, tap} from 'rxjs/operators';\nimport {SocialAuthUtilService} from '../../core/social-auth-util.service';\nimport {DOCUMENT} from '@angular/common';\nimport {SocialAuthConfigMap} from '../../provider/social-auth-config-map';\nimport {SignInOptionsMap} from '../options-map/sign-in-options-map';\nimport {SignOutOptionsMap} from '../options-map/sign-out-options-map';\nimport {StateOptionsMap} from '../options-map/state-options-map';\nimport {MicrosoftAuthResponse} from './microsoft';\n\n/**\n * Implements authentication by Microsoft\n *\n * @author Dmytro Parfenov \n *\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n */\n@Injectable()\nexport class MicrosoftAuthStrategyService implements\n  SocialAuthStrategy {\n\n  private readonly APIUrl = 'https://alcdn.msauth.net/browser/2.8.0/js/msal-browser.min.js';\n\n  /**\n   * A behaviour subject that emits Msal instance\n   */\n  private msalInstance$$: BehaviorSubject | null = null;\n\n  /**\n   * An instance of Microsoft API\n   */\n  private get msal(): any {\n    return this.document.defaultView?.msal;\n  }\n\n  constructor(private readonly socialAuthUtilService: SocialAuthUtilService,\n              @Inject(MICROSOFT_AUTH_CONFIG) private readonly configuration: SocialAuthConfigMap[NgxSocialAuthProviderType.Microsoft],\n              @Inject(DOCUMENT) private readonly document: Document) {\n  }\n\n  isSupport(type: NgxSocialAuthProviderType): boolean {\n    return type === NgxSocialAuthProviderType.Microsoft;\n  }\n\n  // tslint:disable-next-line:max-line-length\n  singIn(options?: SignInOptionsMap[NgxSocialAuthProviderType.Microsoft]): Observable> {\n    return this.getMsalInstance().pipe(\n      switchMap(msalInstance => {\n        if (options?.isLoginRedirect) {\n          msalInstance.loginRedirect(options);\n          return EMPTY;\n        }\n\n        return fromPromise(msalInstance.loginPopup(options));\n      }),\n      map(providerResponse => ({providerResponse}))\n    );\n  }\n\n  signOut(options?: SignOutOptionsMap[NgxSocialAuthProviderType.Microsoft]): Observable {\n    return this.getMsalInstance().pipe(\n      switchMap(msalInstance => fromPromise(msalInstance.logout(options)))\n    );\n  }\n\n  // tslint:disable-next-line:max-line-length\n  getState(options?: StateOptionsMap[NgxSocialAuthProviderType.Microsoft]): Observable> {\n    if (!options) {\n      options = {scopes: ['openid', 'profile', 'User.Read']};\n    }\n\n    return this.getMsalInstance().pipe(\n      switchMap(msalInstance => this.loadWithAccount(msalInstance)),\n      switchMap(msalWithAccount => {\n        if (!options?.account) {\n          options = {...options, account: msalWithAccount.account};\n        }\n\n        return fromPromise(msalWithAccount.instance.acquireTokenSilent(options));\n      }),\n      map(providerResponse => ({providerResponse}))\n    );\n  }\n\n  private getMsalInstance(): Observable {\n    if (this.msalInstance$$) {\n      return this.msalInstance$$.asObservable().pipe(\n        skipWhile(msalInstance => !msalInstance),\n        take(1)\n      );\n    }\n\n    this.msalInstance$$ = new BehaviorSubject(null);\n\n    return this.loadMsalInstance().pipe(\n      tap(this.handleMsalInstance.bind(this)),\n      catchError(this.handleMsalInstanceError.bind(this))\n    );\n  }\n\n  private handleMsalInstance(msalInstance: any): void {\n    if (!this.msalInstance$$) {\n      return;\n    }\n\n    this.msalInstance$$.next(msalInstance);\n  }\n\n  private handleMsalInstanceError(error: any): Observable {\n    if (this.msalInstance$$) {\n      this.msalInstance$$.error(error);\n    }\n\n    return throwError(error);\n  }\n\n  private loadMsalInstance(): Observable {\n    return this.socialAuthUtilService.loadScript({src: this.APIUrl, async: true, defer: true}, 'body')\n      .pipe(\n        switchMap(() => this.createMsalInstance())\n      );\n  }\n\n  private createMsalInstance(): Observable {\n    try {\n      return of(new this.msal.PublicClientApplication(this.configuration));\n    } catch (e) {\n      return throwError('Unable to create Msal instance');\n    }\n  }\n\n  /**\n   * Load Msal instance with current account\n   *\n   * @param instance Msal instance\n   */\n  private loadWithAccount(instance: any): Observable {\n    const accounts = instance.getAllAccounts() || [];\n    const currentAccount = accounts.length > 0 ? accounts[0] : null;\n\n    const fromMsalInstance$ = of(currentAccount);\n\n    /**\n     * Used to handle the account after login redirect\n     */\n    const fromRedirect$ = fromPromise(instance.handleRedirectPromise()).pipe(\n      map((response: any) => response?.account ?? null),\n      catchError(() => of(null))\n    );\n\n    return fromMsalInstance$.pipe(\n      switchMap(account => account ? of(account) : fromRedirect$),\n      map(account => ({instance, account}))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NgxSocialAuthModule.html":{"url":"modules/NgxSocialAuthModule.html","title":"module - NgxSocialAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    NgxSocialAuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/social-auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Allows to authenticate the user by using different social providers\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: NgxSocialAuthModuleConfig)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/social-auth.module.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                NgxSocialAuthModuleConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\nimport {NgxSocialAuthModuleConfig} from './social-auth-module-config';\nimport {fromSocialAuthProviders} from './core/social-auth-providers';\n\n\n/**\n * Allows to authenticate the user by using different social providers\n *\n * @author Dmytro Parfenov \n */\n@NgModule()\nexport class NgxSocialAuthModule {\n\n  constructor(@Optional() @SkipSelf() parentModule?: NgxSocialAuthModule) {\n    if (parentModule) {\n      throw new Error(\n        'NgxSocialAuthModule is already loaded. Import it in the AppModule only');\n    }\n  }\n\n  static forRoot(config: NgxSocialAuthModuleConfig): ModuleWithProviders {\n    const socialAuthProviders = config.providers ?? [];\n    const providers = fromSocialAuthProviders(socialAuthProviders);\n\n    return {\n      ngModule: NgxSocialAuthModule,\n      providers\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxSocialAuthModuleConfig.html":{"url":"interfaces/NgxSocialAuthModuleConfig.html","title":"interface - NgxSocialAuthModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxSocialAuthModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/social-auth-module-config.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for the NgxSocialAuthModule\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        providers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                    \n                                \n                                \n                                    \n                                        providers:         NgxSocialAuthProvider[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         NgxSocialAuthProvider[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {NgxSocialAuthProvider} from './provider/social-auth-provider';\n\n/**\n * Configuration for the {@link NgxSocialAuthModule}\n */\nexport interface NgxSocialAuthModuleConfig {\n  providers?: NgxSocialAuthProvider[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NgxSocialAuthProvider.html":{"url":"classes/NgxSocialAuthProvider.html","title":"class - NgxSocialAuthProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NgxSocialAuthProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/provider/social-auth-provider.ts\n        \n\n            \n                Description\n            \n            \n                Class that allows to create specific auth provider\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                config\n                            \n                            \n                                    Public\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: K, config)\n                    \n                \n                        \n                            \n                                Defined in src/lib/provider/social-auth-provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    K\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            config\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/lib/provider/social-auth-provider.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     K\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/provider/social-auth-provider.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {SocialAuthConfigMap} from './social-auth-config-map';\nimport {NgxSocialAuthProviderType} from '../social-auth-provider-type.enum';\n\n/**\n * Class that allows to create specific auth provider\n *\n * @author Dmytro Parfenov \n */\nexport class NgxSocialAuthProvider {\n  constructor(public readonly type: K,\n              public readonly config: SocialAuthConfigMap[K]) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NgxSocialAuthResponse.html":{"url":"interfaces/NgxSocialAuthResponse.html","title":"interface - NgxSocialAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NgxSocialAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth-response/social-auth-response.ts\n        \n\n            \n                Description\n            \n            \n                Represents an object contains auth response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        providerResponse\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        providerResponse\n                                    \n                                \n                                \n                                    \n                                        providerResponse:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {SocialAuthResponseMap} from './social-auth-response-map';\nimport {NgxSocialAuthProviderType} from '../social-auth-provider-type.enum';\n\n/**\n * Represents an object contains auth response\n */\nexport interface NgxSocialAuthResponse {\n  providerResponse: SocialAuthResponseMap[K];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NgxSocialAuthService.html":{"url":"injectables/NgxSocialAuthService.html","title":"injectable - NgxSocialAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NgxSocialAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/social-auth.service.ts\n        \n\n            \n                Description\n            \n            \n                Allows to authenticate the user by using all configured providers in NgxSocialAuthModule.forRoot\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getState\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(socialAuthStrategies: SocialAuthStrategy[])\n                    \n                \n                        \n                            \n                                Defined in src/lib/social-auth.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialAuthStrategies\n                                                  \n                                                        \n                                                                        SocialAuthStrategy[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \ngetState(providerType: K, options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/social-auth.service.ts:55\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Get current auth state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    providerType\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provider type to call with\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        specific provider options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        specific provider auth response based on [providerType] if the user is authenticated, otherwise 'null'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signIn\n                        \n                        \n                    \n                \n            \n            \n                \nsignIn(providerType: K, options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/social-auth.service.ts:30\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Signs in the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    providerType\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provider type to call with\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        specific provider options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        specific provider auth response based on [providerType]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut(providerType: K, options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/social-auth.service.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Signs out the current account from the application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    providerType\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        provider type to call with\n\n                                    \n                                \n                                \n                                    options\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        specific provider options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable} from '@angular/core';\nimport {SOCIAL_AUTH_STRATEGIES} from './strategy/social-auth-strategies.token';\nimport {SocialAuthStrategy} from './strategy/social-auth-strategy';\nimport {NgxSocialAuthProviderType} from './social-auth-provider-type.enum';\nimport {NgxSocialAuthResponse} from './auth-response/social-auth-response';\nimport {Observable, throwError} from 'rxjs';\nimport {SignInOptionsMap} from './strategy/options-map/sign-in-options-map';\nimport {StateOptionsMap} from './strategy/options-map/state-options-map';\nimport {SignOutOptionsMap} from './strategy/options-map/sign-out-options-map';\n\n/**\n * Allows to authenticate the user by using all configured providers in {@link NgxSocialAuthModule.forRoot}\n *\n * @author Dmytro Parfenov \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSocialAuthService {\n\n  constructor(@Inject(SOCIAL_AUTH_STRATEGIES) private readonly socialAuthStrategies: SocialAuthStrategy[]) { }\n\n  /**\n   * Signs in the user\n   *\n   * @param providerType provider type to call with\n   * @param options specific provider options\n   * @returns specific provider auth response based on [providerType]\n   */\n  signIn(providerType: K, options?: SignInOptionsMap[K]): Observable> {\n    const strategy = this.findStrategy(providerType);\n\n    return strategy ? strategy.singIn(options) : this.throwUndefinedProviderError(providerType);\n  }\n\n  /**\n   * Signs out the current account from the application\n   *\n   * @param providerType provider type to call with\n   * @param options specific provider options\n   */\n  signOut(providerType: K, options?: SignOutOptionsMap[K]): Observable {\n    const strategy = this.findStrategy(providerType);\n\n    return strategy ? strategy.signOut(options) : this.throwUndefinedProviderError(providerType);\n  }\n\n  /**\n   * Get current auth state\n   *\n   * @param providerType provider type to call with\n   * @param options specific provider options\n   * @returns specific provider auth response based on [providerType] if the user is authenticated, otherwise 'null'\n   */\n  getState(providerType: K, options?: StateOptionsMap[K]): Observable> {\n    const strategy = this.findStrategy(providerType);\n\n    return strategy ? strategy.getState(options) : this.throwUndefinedProviderError(providerType);\n  }\n\n  private findStrategy(providerType: K): SocialAuthStrategy | undefined {\n    return this.socialAuthStrategies.find((strategy): strategy is SocialAuthStrategy => strategy.isSupport(providerType));\n  }\n\n  private throwUndefinedProviderError(providerType: NgxSocialAuthProviderType): Observable {\n    return throwError(`Provider type is not defined. Type '${NgxSocialAuthProviderType[providerType]}.'`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignInOptionsMap.html":{"url":"interfaces/SignInOptionsMap.html","title":"interface - SignInOptionsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SignInOptionsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/options-map/sign-in-options-map.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                \n                                \n                                \n                                \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {NgxSocialAuthProviderType} from '../../social-auth-provider-type.enum';\nimport {GoogleAuthSignInOptions} from '../google/google';\nimport {FacebookAuthSignInOptions} from '../facebook/facebook';\nimport {MicrosoftAuthSignInOptions} from '../microsoft/microsoft';\n\nexport interface SignInOptionsMap {\n  readonly [NgxSocialAuthProviderType.Google]: GoogleAuthSignInOptions;\n  readonly [NgxSocialAuthProviderType.Facebook]: FacebookAuthSignInOptions;\n  readonly [NgxSocialAuthProviderType.Microsoft]: MicrosoftAuthSignInOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignOutOptionsMap.html":{"url":"interfaces/SignOutOptionsMap.html","title":"interface - SignOutOptionsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SignOutOptionsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/options-map/sign-out-options-map.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                \n                                \n                                \n                                \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {NgxSocialAuthProviderType} from '../../social-auth-provider-type.enum';\nimport {GoogleAuthSignOutOptions} from '../google/google';\nimport {FacebookAuthSignOutOptions} from '../facebook/facebook';\nimport {MicrosoftAutSignOutOptions} from '../microsoft/microsoft';\n\nexport interface SignOutOptionsMap {\n  readonly [NgxSocialAuthProviderType.Google]: GoogleAuthSignOutOptions;\n  readonly [NgxSocialAuthProviderType.Facebook]: FacebookAuthSignOutOptions;\n  readonly [NgxSocialAuthProviderType.Microsoft]: MicrosoftAutSignOutOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialAuthConfigMap.html":{"url":"interfaces/SocialAuthConfigMap.html","title":"interface - SocialAuthConfigMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SocialAuthConfigMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/provider/social-auth-config-map.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                \n                                \n                                \n                                \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {NgxSocialAuthProviderType} from '../social-auth-provider-type.enum';\nimport {GoogleAuthConfig} from '../strategy/google/google';\nimport {FacebookAuthConfig} from '../strategy/facebook/facebook';\nimport {MicrosoftAuthConfig} from '../strategy/microsoft/microsoft';\n\nexport interface SocialAuthConfigMap {\n  readonly [NgxSocialAuthProviderType.Google]: GoogleAuthConfig;\n  readonly [NgxSocialAuthProviderType.Facebook]: FacebookAuthConfig;\n  readonly [NgxSocialAuthProviderType.Microsoft]: MicrosoftAuthConfig;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialAuthResponseMap.html":{"url":"interfaces/SocialAuthResponseMap.html","title":"interface - SocialAuthResponseMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SocialAuthResponseMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/auth-response/social-auth-response-map.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                \n                                \n                                \n                                \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {NgxSocialAuthProviderType} from '../social-auth-provider-type.enum';\nimport {GoogleAuthResponse} from '../strategy/google/google';\nimport {FacebookAuthResponse} from '../strategy/facebook/facebook';\nimport {MicrosoftAuthResponse} from '../strategy/microsoft/microsoft';\n\nexport interface SocialAuthResponseMap {\n  readonly [NgxSocialAuthProviderType.Google]: GoogleAuthResponse;\n  readonly [NgxSocialAuthProviderType.Facebook]: FacebookAuthResponse;\n  readonly [NgxSocialAuthProviderType.Microsoft]: MicrosoftAuthResponse;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SocialAuthStrategy.html":{"url":"interfaces/SocialAuthStrategy.html","title":"interface - SocialAuthStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SocialAuthStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/social-auth-strategy.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getState\n                                \n                                \n                                    isSupport\n                                \n                                \n                                    signOut\n                                \n                                \n                                    singIn\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \ngetState(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/social-auth-strategy.ts:36\n                \n            \n\n\n            \n                \n                    Get current auth state\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        specific provider options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        specific provider auth response if the user is authenticated, otherwise 'null'\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isSupport\n                        \n                        \n                    \n                \n            \n            \n                \nisSupport(type: K)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/social-auth-strategy.ts:13\n                \n            \n\n\n            \n                \n                    Check whether is strategy support provider type\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            signOut\n                        \n                        \n                    \n                \n            \n            \n                \nsignOut(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/social-auth-strategy.ts:28\n                \n            \n\n\n            \n                \n                    Signs out the current account from the application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        specific provider options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            singIn\n                        \n                        \n                    \n                \n            \n            \n                \nsingIn(options?)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/strategy/social-auth-strategy.ts:21\n                \n            \n\n\n            \n                \n                    Signs in the user\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        specific provider options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        specific provider auth response\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Observable} from 'rxjs';\nimport {NgxSocialAuthProviderType} from '../social-auth-provider-type.enum';\nimport {NgxSocialAuthResponse} from '../auth-response/social-auth-response';\nimport {SignInOptionsMap} from './options-map/sign-in-options-map';\nimport {SignOutOptionsMap} from './options-map/sign-out-options-map';\nimport {StateOptionsMap} from './options-map/state-options-map';\n\nexport interface SocialAuthStrategy {\n\n  /**\n   * Check whether is strategy support provider type\n   */\n  isSupport(type: K): boolean;\n\n  /**\n   * Signs in the user\n   *\n   * @param options specific provider options\n   * @returns specific provider auth response\n   */\n  singIn(options?: SignInOptionsMap[K]): Observable>;\n\n  /**\n   * Signs out the current account from the application\n   *\n   * @param options specific provider options\n   */\n  signOut(options?: SignOutOptionsMap[K]): Observable;\n\n  /**\n   * Get current auth state\n   *\n   * @param options specific provider options\n   * @returns specific provider auth response if the user is authenticated, otherwise 'null'\n   */\n  getState(options?: StateOptionsMap[K]): Observable>;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocialAuthUtilService.html":{"url":"injectables/SocialAuthUtilService.html","title":"injectable - SocialAuthUtilService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SocialAuthUtilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/core/social-auth-util.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadScript\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(document: Document, rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/lib/core/social-auth-util.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    Document\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                        RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadScript\n                        \n                        \n                    \n                \n            \n            \n                \nloadScript(attributes: literal type, append: \"head\" | \"body\")\n                \n            \n\n\n            \n                \n                    Defined in src/lib/core/social-auth-util.service.ts:30\n                \n            \n\n\n            \n                \n                    Load an external script\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    attributes\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a key-value pair of script attributes.\nDetails {\n\n                                    \n                                \n                                \n                                    append\n                                    \n                                            \"head\" | \"body\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        where the script will appended\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, Renderer2, RendererFactory2} from '@angular/core';\nimport {DOCUMENT} from '@angular/common';\nimport {fromEvent, merge, Observable, throwError} from 'rxjs';\nimport {mergeMap, take} from 'rxjs/operators';\n\n/**\n * @dynamic\n * @see https://angular.io/guide/angular-compiler-options#strictmetadataemit\n *\n * @author Dmytro Parfenov \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocialAuthUtilService {\n\n  private readonly renderer = this.createRenderer();\n\n  constructor(@Inject(DOCUMENT) private readonly document: Document,\n              private readonly rendererFactory: RendererFactory2) {\n  }\n\n  /**\n   * Load an external script\n   *\n   * @param attributes a key-value pair of script attributes.\n   * Details {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script}\n   * @param append where the script will appended\n   */\n  loadScript(attributes: {src: string, [key: string]: any}, append: 'head' | 'body'): Observable {\n    const script = this.renderer.createElement('script') as HTMLScriptElement;\n\n    Object.keys(attributes).forEach(key => this.renderer.setAttribute(script, key, attributes[key]));\n\n    const parentElement = this.document[append];\n\n    this.renderer.appendChild(parentElement, script);\n\n    const load$ = fromEvent(script, 'load');\n\n    const error$ = fromEvent(script, 'error').pipe(\n      mergeMap(error => throwError(error))\n    );\n\n    return merge(load$, error$).pipe(\n      take(1)\n    );\n  }\n\n  private createRenderer(): Renderer2 {\n    return this.rendererFactory.createRenderer(null, null);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StateOptionsMap.html":{"url":"interfaces/StateOptionsMap.html","title":"interface - StateOptionsMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  StateOptionsMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/strategy/options-map/state-options-map.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                \n                                \n                                \n                                \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {NgxSocialAuthProviderType} from '../../social-auth-provider-type.enum';\nimport {GoogleAuthStateOptions} from '../google/google';\nimport {FacebookAuthStateOptions} from '../facebook/facebook';\nimport {MicrosoftAuthStateOptions} from '../microsoft/microsoft';\n\nexport interface StateOptionsMap {\n  readonly [NgxSocialAuthProviderType.Google]: GoogleAuthStateOptions;\n  readonly [NgxSocialAuthProviderType.Facebook]: FacebookAuthStateOptions;\n  readonly [NgxSocialAuthProviderType.Microsoft]: MicrosoftAuthStateOptions;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nCHANGELOG\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            NgxSocialAuthProviderType   (src/.../social-auth-provider-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/social-auth-provider-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        NgxSocialAuthProviderType\n                    \n                \n                    \n                        \n                            All available auth providers\n\n                        \n                    \n                        \n                            \n                                 Google\n                            \n                        \n                        \n                            \n                                Value : Google\n                            \n                        \n                        \n                            \n                                 Facebook\n                            \n                        \n                        \n                            \n                                Value : Facebook\n                            \n                        \n                        \n                            \n                                 Microsoft\n                            \n                        \n                        \n                            \n                                Value : Microsoft\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            fromSocialAuthProviders   (src/.../social-auth-providers.ts)\n                        \n                        \n                            resolveProvider   (src/.../social-auth-providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/core/social-auth-providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            fromSocialAuthProviders\n                        \n                        \n                    \n                \n            \n            \n                \nfromSocialAuthProviders(providers)\n                \n            \n\n\n\n\n            \n                \n                    Returns an array of providers which describe how the Injector should be configured\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    providers\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolveProvider\n                        \n                        \n                    \n                \n            \n            \n                \nresolveProvider(provider)\n                \n            \n\n\n\n\n            \n                \n                    Returns an array of providers which describe how the Injector should be configured for the specific auth entity\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Provider[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nngx-social-auth\nThe Angular library provides opportunity to authenticate users by using social identity providers.\nSupported providers\n\nGoogle\nFacebook\nMicrosoft\n\nDemo\nInstall\nNPM: npm install ngx-social-auth --save\nYarn: yarn add ngx-social-auth\nUsage\nImport NgxSocialAuthModule to your working module\nimport {NgxSocialAuthModule} from 'ngx-social-auth';\n\n@NgModule({\n  imports: [\n    NgxSocialAuthModule.forRoot({\n      providers: [\n        new NgxSocialAuthProvider(NgxSocialAuthProviderType.Google, {\n          client_id: 'YOUR_CLIENT_ID'\n        }),\n        new NgxSocialAuthProvider(NgxSocialAuthProviderType.Facebook, {\n          appId: 'YOUR_APP_ID', \n          status: true, \n          version: 'v9.0'\n        }),\n        new NgxSocialAuthProvider(NgxSocialAuthProviderType.Microsoft, {\n          auth: {\n            clientId: 'YOUR_CLIENT_ID', \n            postLogoutRedirectUri: 'YOUR_REDIRECT_URI_AFTER_LOGOUT'\n          }\n        })\n      ]\n    }),\n  ]\n})\nexport class AppModule { }Use NgxSocialAuthService to authenticate user\nimport {NgxSocialAuthProviderType, NgxSocialAuthService} from 'ngx-social-auth';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  constructor(private readonly ngxSocialAuthService: NgxSocialAuthService) {\n  }\n\n  signIn(): void {\n    this.ngxSocialAuthService.signIn(NgxSocialAuthProviderType.Google).subscribe(authResponse => {\n      // do something\n    });\n  }\n\n  signOut(): void {\n    this.ngxSocialAuthService.signOut(NgxSocialAuthProviderType.Google).subscribe(() => {\n      // do something\n    });\n  }\n\n  getState(): void {\n    this.ngxSocialAuthService.getState(NgxSocialAuthProviderType.Google).subscribe(authResponse => {\n      // do something\n    });\n  }\n}Every method in NgxSocialAuthService supports the second optional argument according to the specific provider. \nYou can pass it to provide additional functionality.\nthis.ngxSocialAuthService.signIn(NgxSocialAuthProviderType.Google, { redirect_uri: 'YOUR_REDIRECT_URI' }).subscribe(authResponse => {\n  // do something\n});More examples you can find in demo app\nDocumentation\nDocs site\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        NgxSocialAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FacebookAuthSignOutOptions   (src/.../facebook.ts)\n                        \n                        \n                            FacebookAuthStateOptions   (src/.../facebook.ts)\n                        \n                        \n                            GoogleAuthSignOutOptions   (src/.../google.ts)\n                        \n                        \n                            GoogleAuthStateOptions   (src/.../google.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/strategy/facebook/facebook.ts\n    \n    \n        \n            \n                \n                    \n                    FacebookAuthSignOutOptions\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    FacebookAuthStateOptions\n                \n            \n            \n                \n                            boolean\n\n                \n            \n        \n    \n    src/lib/strategy/google/google.ts\n    \n    \n        \n            \n                \n                    \n                    GoogleAuthSignOutOptions\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GoogleAuthStateOptions\n                \n            \n            \n                \n                    https://developers.google.com/identity/sign-in/web/reference#googleusergetauthresponseincludeauthorizationdata\n\n                \n            \n            \n                \n                            boolean\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            FACEBOOK_AUTH_CONFIG   (src/.../facebook-auth-config.token.ts)\n                        \n                        \n                            GOOGLE_AUTH_CONFIG   (src/.../google-auth-config.token.ts)\n                        \n                        \n                            MICROSOFT_AUTH_CONFIG   (src/.../microsoft-auth-config.token.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            SOCIAL_AUTH_STRATEGIES   (src/.../social-auth-strategies.token.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/lib/strategy/facebook/facebook-auth-config.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FACEBOOK_AUTH_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Ngx.FacebookAuthConfig')\n                        \n                    \n\n                \n                    \n                        An injection token is used to provide facebook auth config data to the FacebookAuthStrategyService\n\n                    \n                \n\n            \n        \n\n    src/lib/strategy/google/google-auth-config.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            GOOGLE_AUTH_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Ngx.GoogleAuthConfig')\n                        \n                    \n\n                \n                    \n                        An injection token is used to provide google auth config data to the GoogleAuthStrategyService\n\n                    \n                \n\n            \n        \n\n    src/lib/strategy/microsoft/microsoft-auth-config.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MICROSOFT_AUTH_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Ngx.MicrosoftAuthConfig')\n                        \n                    \n\n                \n                    \n                        An injection token is used to provide microsoft auth config data to the MicrosoftAuthStrategyService\n\n                    \n                \n\n            \n        \n\n    src/lib/strategy/social-auth-strategies.token.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SOCIAL_AUTH_STRATEGIES\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken('Ngx.SocialAuthStrategies', {\n  factory: () => []\n})\n                        \n                    \n\n                \n                    \n                        An injection token contains SocialAuthStrategy array\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
